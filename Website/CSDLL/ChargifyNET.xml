<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ChargifyNET</name>
    </assembly>
    <members>
        <member name="T:ChargifyNET.Refund">
            <summary>
            A representation of a refund with details about it
            Info here: http://support.chargify.com/faqs/api/api-refunds
            </summary>
        </member>
        <member name="T:ChargifyNET.ChargifyBase">
            <summary>
            Base class for all chargify objects
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyBase.ToHTMLString">
            <summary>
            Convert this object to an HTML formatted string
            </summary>
            <returns>The object represented as an HTML formatted string</returns>
        </member>
        <member name="T:ChargifyNET.IRefund">
            <summary>
            A representation of a refund with details about it
            </summary>
        </member>
        <member name="P:ChargifyNET.IRefund.PaymentID">
            <summary>
            (Required) The ID of the Payment that the credit will be applied to
            </summary>
        </member>
        <member name="P:ChargifyNET.IRefund.Success">
            <summary>
            Was the refund successful?
            </summary>
        </member>
        <member name="P:ChargifyNET.IRefund.AmountInCents">
            <summary>
            The amount of the refund and captured payment, represented in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.IRefund.Amount">
            <summary>
            The amount of the refund and captured payment, represented in dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.IRefund.Memo">
            <summary>
            The memo created for the refund
            </summary>
        </member>
        <member name="M:ChargifyNET.Refund.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.Refund.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="refundXML">An XML string containing a refund node</param>
        </member>
        <member name="M:ChargifyNET.Refund.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="refundNode">An xml node with refund information</param>
        </member>
        <member name="M:ChargifyNET.Refund.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="refundObject">An JsonObject with refund information</param>
        </member>
        <member name="M:ChargifyNET.Refund.CompareTo(ChargifyNET.IRefund)">
            <summary>
            Method for comparing this IRefund object to another (using AmountInCents)
            </summary>
            <param name="other">The other IRefund object to compare against.</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Refund.CompareTo(ChargifyNET.Refund)">
            <summary>
            Method for comparing this Refund object to another (using AmountInCents)
            </summary>
            <param name="other">The other Refund object to compare against.</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="P:ChargifyNET.Refund.PaymentID">
            <summary>
            (Required) The ID of the Payment that the credit will be applied to
            </summary>
        </member>
        <member name="P:ChargifyNET.Refund.Success">
            <summary>
            Was the refund successful?
            </summary>
        </member>
        <member name="P:ChargifyNET.Refund.AmountInCents">
            <summary>
            The amount of the refund and captured payment, represented in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Refund.Amount">
            <summary>
            The amount of the refund and captured payment, represented in dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Refund.Memo">
            <summary>
            The memo created for the refund
            </summary>
        </member>
        <member name="T:ChargifyNET.ICreditCardBase">
            <summary>
            Base class for the credit card types
            </summary>
        </member>
        <member name="P:ChargifyNET.ICreditCardBase.FirstName">
            <summary>
            Get or set the first name on the card
            </summary>
        </member>
        <member name="P:ChargifyNET.ICreditCardBase.LastName">
            <summary>
            Get or set the last name on the card
            </summary>
        </member>
        <member name="P:ChargifyNET.ICreditCardBase.FullNumber">
            <summary>
            Get or set the full credit card number
            </summary>
        </member>
        <member name="P:ChargifyNET.ICreditCardBase.ExpirationMonth">
            <summary>
            Get or set the expiration month
            </summary>
        </member>
        <member name="P:ChargifyNET.ICreditCardBase.ExpirationYear">
            <summary>
            Get or set the expiration year
            </summary>
        </member>
        <member name="T:ChargifyNET.IComponent">
            <summary>
            Components are a way to offer Customers a product that is billed on a per-usage basis.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponent.ID">
            <summary>
            The ID for this component
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponent.Quantity">
            <summary>
            The amount of units used
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponent.Memo">
            <summary>
            An optional description for this component
            </summary>
        </member>
        <member name="T:ChargifyNET.Coupon">
            <summary>
            Object representing coupon in Chargify
            </summary>
        </member>
        <member name="T:ChargifyNET.ICoupon">
            <summary>
            Object representing coupon in Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.AmountInCents">
            <summary>
            The amount of the coupon, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.Amount">
            <summary>
            The amount of the coupon, in dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.Code">
            <summary>
            The string code that represents this coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.CreatedAt">
            <summary>
            The date this coupon was created
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.Description">
            <summary>
            The description of this coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.EndDate">
            <summary>
            The date that this coupon is no longer valid for use
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.ID">
            <summary>
            The ID of this coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.Name">
            <summary>
            The internal name of this coupon in the Chargify site
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.ProductFamilyID">
            <summary>
            The ID of the product family this coupon belongs to
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.StartDate">
            <summary>
            The date this coupon became active
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.UpdatedAt">
            <summary>
            The date this coupon was last updated
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.ArchivedAt">
            <summary>
             The date this coupon was archived
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.DurationInterval">
            <summary>
            The coupon duration interval
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.DurationUnit">
            <summary>
            The coupon duration unit 
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.DurationPeriodCount">
            <summary>
            The coupon period count
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.Percentage">
            <summary>
            If percentage based, the percentage. Int.MinValue otherwise.
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.IsRecurring">
            <summary>
            Is this a recurring coupon?
            </summary>
        </member>
        <member name="M:ChargifyNET.Coupon.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Coupon.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="CouponXML">XML containing coupon info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Coupon.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="couponNode">XML containing coupon info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Coupon.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="couponObject">JsonObject containing coupon info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Coupon.LoadFromJSON(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing coupon data</param>
        </member>
        <member name="M:ChargifyNET.Coupon.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a coupon node
            </summary>
            <param name="couponNode">The coupon node</param>
        </member>
        <member name="M:ChargifyNET.Coupon.CompareTo(ChargifyNET.ICoupon)">
            <summary>
            Method for comparing one coupon to another
            </summary>
        </member>
        <member name="M:ChargifyNET.Coupon.CompareTo(ChargifyNET.Coupon)">
            <summary>
            Method for comparing one coupon to another
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.AmountInCents">
            <summary>
            The amount of the coupon, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.Amount">
            <summary>
            The amount of the coupon, in dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.Code">
            <summary>
            The string code that represents this coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.CreatedAt">
            <summary>
            The date this coupon was created
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.Description">
            <summary>
            The description of this coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.EndDate">
            <summary>
            The date that this coupon is no longer valid for use
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.ID">
            <summary>
            The ID of this coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.Name">
            <summary>
            The internal name of this coupon in the Chargify site
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.ProductFamilyID">
            <summary>
            The ID of the product family this coupon belongs to
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.StartDate">
            <summary>
            The date this coupon became active
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.UpdatedAt">
            <summary>
            The date this coupon was last updated
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.DurationInterval">
            <summary>
            The coupon duration interval
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.DurationUnit">
            <summary>
            The coupon duration unit 
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.DurationPeriodCount">
            <summary>
            The coupon period count
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.Percentage">
            <summary>
            If percentage based, the percentage. Int.MinValue otherwise.
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.IsRecurring">
            <summary>
            Is this a recurring coupon?
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.ArchivedAt">
            <summary>
             The date this coupon was archived
            </summary>
        </member>
        <member name="T:ChargifyNET.Transaction">
            <summary>
            Transaction for a subscription/product for a customer.
            </summary>
        </member>
        <member name="T:ChargifyNET.ITransaction">
            <summary>
            Transaction for a subscription/product for a customer.
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.Type">
            <summary>
            The type of transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.ID">
            <summary>
            The unique identifier for the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.AmountInCents">
            <summary>
            The amount in cents for the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.Amount">
            <summary>
             The amount (in dollars and cents) for the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.CreatedAt">
            <summary>
            Timestamp indicating when the Transaction was created
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.EndingBalanceInCents">
            <summary>
            The remaining balance on the subscription after the Transaction has been processed, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.EndingBalance">
            <summary>
            The remaining balance on the subscription after the Transaction has been processed, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.Memo">
            <summary>
            A note about the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.SubscriptionID">
            <summary>
            The unique identifier for the associated Subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.ProductID">
            <summary>
            The unique identifier for the associated Product
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.Success">
            <summary>
            Whether or not the Transaction was successful.
            </summary>
        </member>
        <member name="M:ChargifyNET.Transaction.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.Transaction.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="TransactionXML">An XML string containing a transaction node</param>
        </member>
        <member name="M:ChargifyNET.Transaction.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="transactionNode">An xml node with transaction information</param>
        </member>
        <member name="M:ChargifyNET.Transaction.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="transactionObject">JsonObject containing transaction info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Transaction.LoadFromJSON(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing transaction data</param>
        </member>
        <member name="M:ChargifyNET.Transaction.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a transaction node
            </summary>
            <param name="transactionNode">The transaction node</param>
        </member>
        <member name="M:ChargifyNET.Transaction.CompareTo(ChargifyNET.ITransaction)">
            <summary>
            Compare this instance to another (by ID)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Transaction.CompareTo(ChargifyNET.Transaction)">
            <summary>
            Compare this instance to another (by ID)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="P:ChargifyNET.Transaction.Type">
            <summary>
            The type of transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.ID">
            <summary>
            The unique identifier for the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.AmountInCents">
            <summary>
            The amount in cents for the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.Amount">
            <summary>
             The amount (in dollars and cents) for the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.CreatedAt">
            <summary>
            Timestamp indicating when the Transaction was created
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.EndingBalanceInCents">
            <summary>
            The remaining balance on the subscription after the Transaction has been processed, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.EndingBalance">
            <summary>
            The remaining balance on the subscription after the Transaction has been processed, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.Memo">
            <summary>
            A note about the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.SubscriptionID">
            <summary>
            The unique identifier for the associated Subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.ProductID">
            <summary>
            The unique identifier for the associated Product
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.Success">
            <summary>
            Whether or not the Transaction was successful.
            </summary>
        </member>
        <member name="T:ChargifyNET.Customer">
            <summary>
            Class representing a chargify customer
            </summary>
        </member>
        <member name="T:ChargifyNET.CustomerAttributes">
            <summary>
            Class representing basic attributes for a customer
            </summary>
        </member>
        <member name="T:ChargifyNET.ICustomerAttributes">
            <summary>
            Class representing basic attributes for a customer
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.FirstName">
            <summary>
            Get or set the customer's first name
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.LastName">
            <summary>
            Get or set the customer's last name
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.Email">
            <summary>
            Get or set the customer's email address
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.Organization">
            <summary>
            Get or set the customer's organization
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.SystemID">
            <summary>
            Get or set the customer's ID in the calling system
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.FullName">
            <summary>
            Get the full name LastName FirstName for the customer
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.ShippingAddress">
            <summary>
            The customers shipping address
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.ShippingCity">
            <summary>
            The customers shipping city
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.ShippingZip">
            <summary>
            The customers shipping zip/postal code
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.ShippingState">
            <summary>
            The customers shipping state
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.ShippingCountry">
            <summary>
            The customers shipping country
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor.  Values specified
            </summary>
            <param name="FirstName">The customer's first name</param>
            <param name="LastName">The customer's last name</param>
            <param name="Email">The customer's email address</param>
            <param name="Organization">The customer's organization</param>
            <param name="SystemID">The customer's system ID</param>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="CustomerAttributesXML">XML containing customer info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="customerAttributesNode">XML node containing customer info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="customerAttributesObject">JsonObject containing customer info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.LoadFromJSON(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing customer attribute data</param>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a customer node
            </summary>
            <param name="customerNode">The customer node</param>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.CompareTo(ChargifyNET.ICustomerAttributes)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.CompareTo(ChargifyNET.CustomerAttributes)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ToString">
            <summary>
            Returns the string equivalent of the CustomerAttribute object.
            </summary>
            <returns>The full name of the customer</returns>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.FirstName">
            <summary>
            Get or set the customer's first name
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.LastName">
            <summary>
            Get or set the customer's last name
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.Email">
            <summary>
            Get or set the customer's email address
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.Organization">
            <summary>
            Get or set the customer's organization
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.ShippingAddress">
            <summary>
            The customers shipping address
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.ShippingCity">
            <summary>
            The customers shipping city
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.ShippingZip">
            <summary>
            The customers shipping zip/postal code
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.ShippingState">
            <summary>
            The customers shipping state
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.ShippingCountry">
            <summary>
            The customers shipping country
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.SystemID">
            <summary>
            Get or set the customer's ID in the calling system
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.FullName">
            <summary>
            Get the full name LastName FirstName for the customer
            </summary>
        </member>
        <member name="T:ChargifyNET.ICustomer">
            <summary>
            Interface representing a chargify customer
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomer.ChargifyID">
            <summary>
            Get the customer's chargify ID
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomer.Created">
            <summary>
            Get the date and time the customer was created a Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomer.LastUpdated">
            <summary>
            Get the date and time the customer was last updated at chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomer.IsSaved">
            <summary>
            Get a boolean value that indicates whether or not this customer is currently saved
            in the Chargify system
            </summary>
        </member>
        <member name="M:ChargifyNET.Customer.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Customer.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor.  Values specified
            </summary>
            <param name="FirstName">The customer's first name</param>
            <param name="LastName">The customer's last name</param>
            <param name="Email">The customer's email address</param>
            <param name="Organization">The customer's organization</param>
            <param name="SystemID">The customer's system ID</param>
        </member>
        <member name="M:ChargifyNET.Customer.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="CustomerXML">XML containing customer info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Customer.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="customerNode">XML containing customer info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Customer.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="customerObject">JsonObject containing customer info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Customer.LoadFromJSON(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing customer data</param>
        </member>
        <member name="M:ChargifyNET.Customer.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a customer node
            </summary>
            <param name="customerNode">The customer node</param>
        </member>
        <member name="M:ChargifyNET.Customer.op_Equality(ChargifyNET.Customer,ChargifyNET.Customer)">
            <summary>
            Equals operator for two customers
            </summary>
            <returns>True if the Customers are equal</returns>
        </member>
        <member name="M:ChargifyNET.Customer.op_Equality(ChargifyNET.Customer,ChargifyNET.ICustomer)">
            <summary>
            Equals operator for two customers
            </summary>
            <returns>True if the Customers are equal</returns>
        </member>
        <member name="M:ChargifyNET.Customer.op_Equality(ChargifyNET.ICustomer,ChargifyNET.Customer)">
            <summary>
            Equals operator for two customers
            </summary>
            <returns>True if the Customers are equal</returns>
        </member>
        <member name="M:ChargifyNET.Customer.op_Inequality(ChargifyNET.Customer,ChargifyNET.Customer)">
            <summary>
            Not Equals operator for two customers
            </summary>
            <returns>True if the Customers are not equal</returns>
        </member>
        <member name="M:ChargifyNET.Customer.op_Inequality(ChargifyNET.Customer,ChargifyNET.ICustomer)">
            <summary>
            Not Equals operator for two customers
            </summary>
            <returns>True if the Customers are not equal</returns>
        </member>
        <member name="M:ChargifyNET.Customer.op_Inequality(ChargifyNET.ICustomer,ChargifyNET.Customer)">
            <summary>
            Not Equals operator for two customers
            </summary>
            <returns>True if the Customers are not equal</returns>
        </member>
        <member name="M:ChargifyNET.Customer.GetHashCode">
            <summary>
            Get Hash code
            </summary>
        </member>
        <member name="M:ChargifyNET.Customer.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:ChargifyNET.Customer.ToString">
            <summary>
            Convert object to a string
            </summary>
            <returns>The string representation of the object</returns>
        </member>
        <member name="M:ChargifyNET.Customer.CompareTo(ChargifyNET.ICustomer)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Customer.CompareTo(ChargifyNET.Customer)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="P:ChargifyNET.Customer.ChargifyID">
            <summary>
            Get the customer's chargify ID
            </summary>
        </member>
        <member name="P:ChargifyNET.Customer.Created">
            <summary>
            Get the date and time the customer was created a Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Customer.LastUpdated">
            <summary>
            Get the date and time the customer was last updated at chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Customer.IsSaved">
            <summary>
            Get a boolean value that indicates whether or not this customer is currently saved
            in the Chargify system
            </summary>
        </member>
        <member name="T:ChargifyNET.CreditCardBase">
            <summary>
            Base class for the credit card types
            </summary>
        </member>
        <member name="M:ChargifyNET.CreditCardBase.#ctor">
            <summary>
            Protected Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.CreditCardBase.#ctor(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Protected Constructor
            </summary>
            <param name="FirstName">The first name on the credit card</param>
            <param name="LastName">The last name on the credit card</param>
            <param name="FullNumber">The full credit card number</param>
            <param name="ExpirationYear">The expiration year</param>
            <param name="ExpirationMonth">The expiration month</param>
        </member>
        <member name="P:ChargifyNET.CreditCardBase.FirstName">
            <summary>
            Get or set the first name on the card
            </summary>
        </member>
        <member name="P:ChargifyNET.CreditCardBase.LastName">
            <summary>
            Get or set the last name on the card
            </summary>
        </member>
        <member name="P:ChargifyNET.CreditCardBase.FullNumber">
            <summary>
            Get or set the full credit card number
            </summary>
        </member>
        <member name="P:ChargifyNET.CreditCardBase.ExpirationMonth">
            <summary>
            Get or set the expiration month
            </summary>
        </member>
        <member name="P:ChargifyNET.CreditCardBase.ExpirationYear">
            <summary>
            Get or set the expiration year
            </summary>
        </member>
        <member name="T:ChargifyNET.WebhookHandler">
            <summary>
            IHttpHandler which processes any webhook responses FROM chargify.
            To implement, inherit this class and override the OnChargifyUpdate method.
            </summary>
        </member>
        <member name="M:ChargifyNET.WebhookHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Because of the way that this IHttpHander is setup in the web.config,
            <example><add verb="POST" path="Update.axd" type="WebhookHandler" /></example>
            this request will only be handling POST updates, which is what the Chargify system will
            be sending.
            </summary>
        </member>
        <member name="M:ChargifyNET.WebhookHandler.OnChargifyUpdate(System.Int32,System.String,System.String)">
            <summary>
            Method that gets called when Chargify sends a webhook response to this handler
            </summary>
            <param name="webhookID">The webhook ID (used for verification)</param>
            <param name="signature">The signature that was passed with the data</param>
            <param name="data">They data they are sending</param>
        </member>
        <member name="P:ChargifyNET.WebhookHandler.IsReusable">
            <summary>
            You will need to configure this handler in the web.config file of your 
            web and register it with IIS before being able to use it. For more information
            see the following link: http://go.microsoft.com/?linkid=8101007
            </summary>
        </member>
        <member name="T:ChargifyNET.Json.JsonException">
            <summary>
            Exception for dealing with Json
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonException.#ctor(System.String)">
            <summary>
            JsonException constructor
            </summary>
            <param name="message">The message to display</param>
        </member>
        <member name="T:ChargifyNET.Json.JsonParseException">
            <summary>
            Exception for dealing with Json parsing
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonParseException.#ctor(System.String)">
            <summary>
            JsonParseException Constructor
            </summary>
            <param name="message">The message to display</param>
        </member>
        <member name="M:ChargifyNET.Json.JsonParseException.#ctor(System.String,System.Int32)">
            <summary>
            JsonParseException constructor
            </summary>
            <param name="input">The JSON being parsed</param>
            <param name="position">The position where an error occurred parsing it</param>
        </member>
        <member name="T:ChargifyNET.Controls.CountryDropDownList">
            <summary>
            Custom control
            </summary>
        </member>
        <member name="M:ChargifyNET.Controls.CountryDropDownList.OnLoad(System.EventArgs)">
            <summary>
            Overloading the OnLoad method to inject the countries from the ISO 3166-1 Alpha 2 list
            </summary>
            <param name="e">The event args of the OnLoad</param>
        </member>
        <member name="T:ChargifyNET.Subscription">
            <summary>
            Class representing am existing Chargify subscription
            </summary>
        </member>
        <member name="T:ChargifyNET.ISubscription">
            <summary>
            Interface representing an existing Chargify subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.ActivatedAt">
            <summary>
            Timestamp for when the subscription began
            <remarks>When it came out of trial, or when it began in the case of no trial period</remarks>
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.BalanceInCents">
            <summary>
            Get the current outstanding subscription balance, in the number of cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.Balance">
            <summary>
            Get the current outstanding subscription balance, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.CancelAtEndOfPeriod">
            <summary>
            Is this subscription going to automatically cancel at the end of the current period?
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.CancellationMessage">
            <summary>
            Seller-provided reason for, or note about, the cancellation.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.Created">
            <summary>
            Get the date and time the subscription was created a Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.CurrentPeriodEndsAt">
            <summary>
            Get the date and time relating to the end of the current (recurring) period
            <remarks>(ie. when the next regularily scheduled attemped charge will occur)</remarks>
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.ExpiresAt">
            <summary>
            Timestamp giving the expiration date of this subscription (if any)
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.SubscriptionID">
            <summary>
            Get the subscription unique id within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.NextAssessmentAt">
            <summary>
            Get the date and time that indicates when capture of payment will be tried or retried.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.State">
            <summary>
            Get the current state of the subscription.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.TrialEndedAt">
            <summary>
            Get the date and time relating to when the trial period (if any) ended
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.TrialStartedAt">
            <summary>
            Get the date and time relating to when the trial period (if any) began
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.LastUpdated">
            <summary>
            Get the date and time the subscription was last updated at chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.CurrentPeriodStartedAt">
            <summary>
            Get the date and time relating to the start of the current (recurring) period.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.PreviousState">
            <summary>
             The previous state of this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.SignupPaymentID">
            <summary>
            The ID of the corresponding payment transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.SignupRevenue">
            <summary>
            The revenue accepted upon signup
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.DelayedCancelAt">
            <summary>
            Get the date and time relating to the time the subscription was cancelled due to a "delayed cancel"
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.Product">
            <summary>
            Get the product for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.CreditCard">
            <summary>
            Get the credit card details for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.Customer">
            <summary>
            Get the customer details for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.CanceledAt">
            <summary>
            Get the date the subscription was cancelled
            </summary>
        </member>
        <member name="M:ChargifyNET.Subscription.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Subscription.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="SubscriptionXML">XML containing subscription info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Subscription.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="subscriptionNode">XML containing subscription info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Subscription.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="subscriptionObject">JsonObject containing subscription info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Subscription.LoadFromJSON(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing subscription data</param>
        </member>
        <member name="M:ChargifyNET.Subscription.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a subscription node
            </summary>
            <param name="subscriptionNode">The subscription node</param>
        </member>
        <member name="M:ChargifyNET.Subscription.op_Equality(ChargifyNET.Subscription,ChargifyNET.Subscription)">
            <summary>
            Equals operator for two subscriptions
            </summary>
            <returns>True if the subscriptions are equal</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.op_Equality(ChargifyNET.Subscription,ChargifyNET.ISubscription)">
            <summary>
            Equals operator for two subscriptions
            </summary>
            <returns>True if the subscriptions are equal</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.op_Equality(ChargifyNET.ISubscription,ChargifyNET.Subscription)">
            <summary>
            Equals operator for two subscriptions
            </summary>
            <returns>True if the subscriptions are equal</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.op_Inequality(ChargifyNET.Subscription,ChargifyNET.Subscription)">
            <summary>
            Not Equals operator for two subscriptions
            </summary>
            <returns>True if the subscriptions are not equal</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.op_Inequality(ChargifyNET.Subscription,ChargifyNET.ISubscription)">
            <summary>
            Not Equals operator for two subscriptions
            </summary>
            <returns>True if the subscriptions are not equal</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.op_Inequality(ChargifyNET.ISubscription,ChargifyNET.Subscription)">
            <summary>
            Not Equals operator for two subscriptions
            </summary>
            <returns>True if the subscriptions are not equal</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.GetHashCode">
            <summary>
            Get Hash code
            </summary>
        </member>
        <member name="M:ChargifyNET.Subscription.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:ChargifyNET.Subscription.ToString">
            <summary>
            Returns a string representation of the Subscription object.
            </summary>
        </member>
        <member name="M:ChargifyNET.Subscription.CompareTo(ChargifyNET.ISubscription)">
            <summary>
            Compare this instance to another (by SubscriptionID)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.CompareTo(ChargifyNET.Subscription)">
            <summary>
            Compare this instance to another (by SubscriptionID)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="P:ChargifyNET.Subscription.SubscriptionID">
            <summary>
            The subscription unique ID within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.State">
            <summary>
            The current state of the subscription. 
            It may be "trailing", "active", "soft_failure", "past_due", "suspended", "closed" or "expired"
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.BalanceInCents">
            <summary>
            Gives the current outstanding subscription balance, in the number of cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.Balance">
            <summary>
            Gives the current outstanding subscription balance, in the number of dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.CancellationMessage">
            <summary>
            Seller-provided reason for, or note about, the cancellation
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.ActivatedAt">
            <summary>
            Timestamp for when the subscription began
            <remarks>i.e. when it came out of trial, or when it began in the case of no trial</remarks>
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.Created">
            <summary>
            Get the date and time the customer was created a Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.ExpiresAt">
            <summary>
            Timestamp giving the expiration date of this subscription (if any)
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.LastUpdated">
            <summary>
            Get the date and time the customer was last updated at chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.CanceledAt">
            <summary>
            Get the date the subscription was cancelled
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.CurrentPeriodStartedAt">
            <summary>
            Timestamp relating to the start of the current (recurring) period
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.CurrentPeriodEndsAt">
            <summary>
            Timestamp relating to the end of the current (recurring) period
            <remarks>i.e. when the next regularily scheduled attemped charge will occur</remarks>
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.NextAssessmentAt">
            <summary>
            Get the date and time that indicates when capture of payment will be tried or retried.
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.TrialStartedAt">
            <summary>
            Timestamp for when the trial period (if any) began
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.TrialEndedAt">
            <summary>
            Timestamp for when the trial period (if any) ended
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.Product">
            <summary>
            Get the product for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.CreditCard">
            <summary>
            Get the credit card information for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.Customer">
            <summary>
            Get the customer information for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.CancelAtEndOfPeriod">
            <summary>
            Is this subscription going to automatically cancel at the end of the current period?
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.SignupPaymentID">
            <summary>
            The ID of the corresponding payment transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.SignupRevenue">
            <summary>
            The revenue accepted upon signup
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.DelayedCancelAt">
            <summary>
            Get the date and time relating to the time the subscription was cancelled due to a "delayed cancel"
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.PreviousState">
            <summary>
             The previous state of this subscription
            </summary>
        </member>
        <member name="T:ChargifyNET.Product">
            <summary>
            Class representing a product.  Subscriptions will subscribe to a product
            </summary>
        </member>
        <member name="T:ChargifyNET.IProduct">
            <summary>
            Interface representing a product.  Subscriptions will subscribe to a product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.PriceInCents">
            <summary>
            Get the price (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.Price">
            <summary>
            Get the price, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.Name">
            <summary>
            Get the name of this product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ID">
            <summary>
            The ID of the product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.Handle">
            <summary>
            Get the handle to this product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.Description">
            <summary>
            Get the description of the product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ProductFamily">
            <summary>
            Get the product family for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.AccountingCode">
            <summary>
            Get the accounting code for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.IntervalUnit">
            <summary>
            Get the interval unit (day, month) for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.Interval">
            <summary>
            Get the renewal interval for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.InitialChargeInCents">
            <summary>
            Get the up front charge for this product, in cents. 
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.InitialCharge">
            <summary>
            Get the up front charge for this product, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.TrialPriceInCents">
            <summary>
            Get the price of the trial period for a subscription to this product, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.TrialPrice">
            <summary>
            Get the price of the trial period for a subscription to this product, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.TrialInterval">
            <summary>
            A numerical interval for the length of the trial period of a subscription to this product.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.TrialIntervalUnit">
            <summary>
            A string representing the trial interval unit for this product, either "month" or "day"
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ExpirationInterval">
            <summary>
            A numerical interval for the length a subscription to this product will run before it expires.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ExpirationIntervalUnit">
            <summary>
            A string representing the expiration interval for this product, either "month" or "day"
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ReturnURL">
            <summary>
            The URL the buyer is returned to after successful purchase.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ReturnParams">
            <summary>
            The parameter string chargify will use in constructing the return URL.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.RequireCreditCard">
            <summary>
            This product requires a credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.RequestCreditCard">
            <summary>
            This product requests a credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.CreatedAt">
            <summary>
            Timestamp indicating when this product was created.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.UpdatedAt">
            <summary>
            Timestamp indicating when this product was updated.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ArchivedAt">
            <summary>
            Timestamp indicating when this product was updated.
            </summary>
        </member>
        <member name="M:ChargifyNET.Product.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.Product.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ProductXML">An XML string containing a product node</param>
        </member>
        <member name="M:ChargifyNET.Product.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="productNode">An aml node with product information</param>
        </member>
        <member name="M:ChargifyNET.Product.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="productObject">JsonObject containing product info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Product.LoadFromJSON(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing product data</param>
        </member>
        <member name="M:ChargifyNET.Product.op_Equality(ChargifyNET.Product,ChargifyNET.Product)">
            <summary>
            Equals operator for two products
            </summary>
            <returns>True if the products are equal</returns>
        </member>
        <member name="M:ChargifyNET.Product.op_Inequality(ChargifyNET.Product,ChargifyNET.Product)">
            <summary>
            Unequal operator for two products
            </summary>
            <returns>True if the products are unequal</returns>
        </member>
        <member name="M:ChargifyNET.Product.op_Equality(ChargifyNET.Product,ChargifyNET.IProduct)">
            <summary>
            Equals operator for two products
            </summary>
            <returns>True if the products are equal</returns>
        </member>
        <member name="M:ChargifyNET.Product.op_Inequality(ChargifyNET.Product,ChargifyNET.IProduct)">
            <summary>
            Unequals operator for two products
            </summary>
            <returns>True if the products are unequal</returns>
        </member>
        <member name="M:ChargifyNET.Product.op_Equality(ChargifyNET.IProduct,ChargifyNET.Product)">
            <summary>
            Equals operator for two products
            </summary>
            <returns>True if the products are equal</returns>
        </member>
        <member name="M:ChargifyNET.Product.op_Inequality(ChargifyNET.IProduct,ChargifyNET.Product)">
            <summary>
            Unequal operator for two products
            </summary>
            <returns>True if the products are unequal</returns>
        </member>
        <member name="M:ChargifyNET.Product.GetHashCode">
            <summary>
            Get Hash code
            </summary>
        </member>
        <member name="M:ChargifyNET.Product.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:ChargifyNET.Product.ToString">
            <summary>
            Convert object to a string
            </summary>
            <returns>The string representation of the object</returns>
        </member>
        <member name="M:ChargifyNET.Product.CompareTo(ChargifyNET.IProductFamily)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Product.CompareTo(ChargifyNET.Product)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="P:ChargifyNET.Product.PriceInCents">
            <summary>
            Get the price (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.Price">
            <summary>
            Get the price, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.Name">
            <summary>
            Get the name of this product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ID">
            <summary>
            The ID of the product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.Handle">
            <summary>
            Get the handle to this product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.Description">
            <summary>
            Get the description of the product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ProductFamily">
            <summary>
            Get the product family for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.AccountingCode">
            <summary>
            Get the accounting code for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.IntervalUnit">
            <summary>
            Get the interval unit (day, month) for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.Interval">
            <summary>
            Get the renewal interval for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.InitialChargeInCents">
            <summary>
            Get the up front charge you have specified, in cents. 
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.InitialCharge">
            <summary>
            Get the up front charge for this product, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.TrialPriceInCents">
            <summary>
            Get the price of the trial period for a subscription to this product, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.TrialPrice">
            <summary>
            Get the price of the trial period for a subscription to this product, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.TrialInterval">
            <summary>
            A numerical interval for the length of the trial period of a subscription to this product.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.TrialIntervalUnit">
            <summary>
            A string representing the trial interval unit for this product, either "month" or "day"
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ExpirationInterval">
            <summary>
            A numerical interval for the length a subscription to this product will run before it expires.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ExpirationIntervalUnit">
            <summary>
            A string representing the expiration interval for this product, either "month" or "day"
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ReturnURL">
            <summary>
            The URL the buyer is returned to after successful purchase.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ReturnParams">
            <summary>
            The parameter string chargify will use in constructing the return URL.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.RequireCreditCard">
            <summary>
            This product requires a credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.RequestCreditCard">
            <summary>
            This product requests a credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.CreatedAt">
            <summary>
            Timestamp indicating when this product was created.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.UpdatedAt">
            <summary>
            Timestamp indicating when this product was updated.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ArchivedAt">
            <summary>
            Timestamp indicating when this product was updated.
            </summary>
        </member>
        <member name="T:ChargifyNET.Json.XmlToJsonConverter">
            <summary>
            Class used to convert an XmlDocument into JSON to send back to Chargify
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.XmlToJsonConverter.XmlToJSON(System.Xml.XmlDocument)">
            <summary>
            Method converts XmlDocument to JSON
            </summary>
            <param name="xmlDoc">The document to convert</param>
            <returns>The JSON equivalent string</returns>
        </member>
        <member name="T:ChargifyNET.Json.JsonBoolean">
            <summary>
            Object representing JSON boolean value
            </summary>
        </member>
        <member name="T:ChargifyNET.Json.JsonValue">
            <summary>
            Object representing JSON value
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonValue.EatSpaces(System.String,System.Int32@)">
            <summary>
            Eats spaces in the string
            </summary>
            <param name="str">The string to eat spaces from</param>
            <param name="position">The current position</param>
        </member>
        <member name="M:ChargifyNET.Json.JsonValue.ParseValue(System.String,System.Int32@)">
            <summary>
            Parses the JSON value into the JsonValue object
            </summary>
            <param name="str">The string to parse</param>
            <param name="position">The current position</param>
            <returns>The JsonValue if parsed, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.Json.JsonBoolean.#ctor(System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="value">The value of this object</param>
        </member>
        <member name="M:ChargifyNET.Json.JsonBoolean.ToString">
            <summary>
            Returns the boolean string of this object
            </summary>
            <returns></returns>
        </member>
        <member name="P:ChargifyNET.Json.JsonBoolean.Value">
            <summary>
            The value of this object (as bool)
            </summary>
        </member>
        <member name="T:ChargifyNET.TransactionType">
            <summary>
            The following is a list of available transaction types
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Charge">
            <summary>
            Charge Transaction
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Refund">
            <summary>
            Refund Transaction
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Payment">
            <summary>
            Payment Transaction
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Credit">
            <summary>
            Credit Transaction
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Payment_Authorization">
            <summary>
            Transaction Authorization
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Info">
            <summary>
            Info Transaction
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Adjustment">
            <summary>
            Adjustment Transaction
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Unknown">
            <summary>
            Unknown Transaction Type
            </summary>
        </member>
        <member name="T:ChargifyNET.ComponentType">
            <summary>
            The type of component as defined in Chargify's documentation
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentType.Metered_Component">
            <summary>
            Metered Component
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentType.Quantity_Based_Component">
            <summary>
            Quantity Based Component
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentType.On_Off_Component">
            <summary>
            On/Off Component
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentType.Unknown">
            <summary>
            Unknown Transaction Type
            </summary>
        </member>
        <member name="T:ChargifyNET.PricingSchemeType">
            <summary>
            The type of pricing scheme
            </summary>
        </member>
        <member name="F:ChargifyNET.PricingSchemeType.Per_Unit">
            <summary>
            Per unit based scheme
            </summary>
        </member>
        <member name="F:ChargifyNET.PricingSchemeType.Volume">
            <summary>
            Volume based scheme
            </summary>
        </member>
        <member name="F:ChargifyNET.PricingSchemeType.Tiered">
            <summary>
            Tiered based scheme
            </summary>
        </member>
        <member name="F:ChargifyNET.PricingSchemeType.Stairstep">
            <summary>
            Stairstep based scheme
            </summary>
        </member>
        <member name="F:ChargifyNET.PricingSchemeType.Unknown">
            <summary>
            Unknown Transaction Type
            </summary>
        </member>
        <member name="T:ChargifyNET.IComponentInfo">
            <summary>
            Specfic class when getting information about a component as set to a specific product family
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.CreatedAt">
            <summary>
            Date and time that this component was created
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.ID">
            <summary>
            The ID of this component
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.Name">
            <summary>
            The name of the component as created by the Chargify user
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.PricePerUnitInCents">
            <summary>
            Price of the component per unit (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.PricePerUnit">
            <summary>
            Price of the component per unit (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.PricingScheme">
            <summary>
            The type of pricing scheme setup for this component
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.ProductFamilyID">
            <summary>
            The ID of the product family this component was created for
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.UnitName">
            <summary>
            The name for the unit this component is measured in.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.UpdatedAt">
            <summary>
            Date/Time that this component was last updated.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.Kind">
            <summary>
            The kind of component, either quantity-based or metered component
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.UnitPrice">
            <summary>
            The amount the customer will be charged per unit. This field is only populated for 'per_unit' pricing schemes.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.Prices">
            <summary>
            An list of price brackets. If the component uses the 'per_unit' pricing scheme, an empty list will be returned.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.Archived">
            <summary>
            Boolean flag describing whether a component is archived or not
            </summary>
        </member>
        <member name="T:ChargifyNET.IPriceBracketInfo">
            <summary>
            For those compoments that have price brackets, this is the info
            </summary>
        </member>
        <member name="P:ChargifyNET.IPriceBracketInfo.StartingQuantity">
            <summary>
            The starting quantity for the component
            </summary>
        </member>
        <member name="P:ChargifyNET.IPriceBracketInfo.EndingQuantity">
            <summary>
            The ending quantity for the component
            </summary>
        </member>
        <member name="P:ChargifyNET.IPriceBracketInfo.UnitPrice">
            <summary>
            The unit price for the component
            </summary>
        </member>
        <member name="T:ChargifyNET.Configuration.ChargifyAccountElementCollection">
            <summary>
            The collection of Chargify Account elements in web.config
            </summary>
        </member>
        <member name="M:ChargifyNET.Configuration.ChargifyAccountElementCollection.CreateNewElement">
            <summary>
            Create a new configuration element of type ChargifyAccountElement
            </summary>        
        </member>
        <member name="M:ChargifyNET.Configuration.ChargifyAccountElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Get the element
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:ChargifyNET.Configuration.ChargifyAccountElementCollection.Item(System.Int32)">
            <summary>
            Get the account element by index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:ChargifyNET.ComponentInfo">
            <summary>
            Specfic class when getting information about a component as set to a specific product family
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentInfo.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="componentInfoXML">An XML string containing a component node</param>
        </member>
        <member name="M:ChargifyNET.ComponentInfo.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="componentInfoNode">An xml node with component information</param>
        </member>
        <member name="M:ChargifyNET.ComponentInfo.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="componentInfoObject">An JsonObject with component information</param>
        </member>
        <member name="M:ChargifyNET.ComponentInfo.CompareTo(ChargifyNET.IComponentInfo)">
            <summary>
            Compare method for ComponentInfo
            </summary>
            <param name="other">The object to compare to.</param>
            <returns>The CompareTo value based on comparing IDs</returns>
        </member>
        <member name="M:ChargifyNET.ComponentInfo.CompareTo(ChargifyNET.ComponentInfo)">
            <summary>
            Compare method for ComponentInfo
            </summary>
            <param name="other">The object to compare to.</param>
            <returns>The CompareTo value based on comparing IDs</returns>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.CreatedAt">
            <summary>
            Date and time that this component was created
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.ID">
            <summary>
            The ID of this component
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.Name">
            <summary>
            The name of the component as created by the Chargify user
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.PricePerUnitInCents">
            <summary>
            Price of the component per unit (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.PricePerUnit">
            <summary>
            Price of the component per unit (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.PricingScheme">
            <summary>
            The type of pricing scheme for this component
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.ProductFamilyID">
            <summary>
            The ID of the product family this component was created for
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.UnitName">
            <summary>
            The name for the unit this component is measured in.
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.UpdatedAt">
            <summary>
            Date/Time that this component was last updated.
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.Kind">
            <summary>
            The kind of component, either quantity-based or metered component
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.UnitPrice">
            <summary>
            The amount the customer will be charged per unit. This field is only populated for 'per_unit' pricing schemes.
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.Prices">
            <summary>
            An list of price brackets. If the component uses the 'per_unit' pricing scheme, an empty list will be returned.
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.Archived">
            <summary>
            Boolean flag describing whether a component is archived or not
            </summary>
        </member>
        <member name="P:ChargifyNET.PriceBracketInfo.StartingQuantity">
            <summary>
            The starting quantity for the component
            </summary>
        </member>
        <member name="P:ChargifyNET.PriceBracketInfo.EndingQuantity">
            <summary>
            The ending quantity for the component
            </summary>
        </member>
        <member name="P:ChargifyNET.PriceBracketInfo.UnitPrice">
            <summary>
            The unit price for the component
            </summary>
        </member>
        <member name="T:ChargifyNET.Usage">
            <summary>
            A usage is a record of a customer using a metered component
            </summary>
        </member>
        <member name="T:ChargifyNET.IUsage">
            <summary>
            A usage is a record of a customer using a metered component
            </summary>
        </member>
        <member name="P:ChargifyNET.IUsage.ID">
            <summary>
            The ID of the usage element
            </summary>
        </member>
        <member name="P:ChargifyNET.IUsage.Quantity">
            <summary>
            The usage quantity
            </summary>
        </member>
        <member name="P:ChargifyNET.IUsage.Memo">
            <summary>
            A note containing information about the usage
            </summary>
        </member>
        <member name="M:ChargifyNET.Usage.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Usage.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="UsageXML">XML containing usage info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Usage.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="usageNode">XML containing usage info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Usage.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="usageObject">JsonObject containing usage info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Usage.LoadFromJSON(ChargifyNET.Json.JsonObject)">
            <summary>
            Load usage data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing usage data</param>
        </member>
        <member name="M:ChargifyNET.Usage.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a subscription node
            </summary>
            <param name="subscriptionNode">The subscription node</param>
        </member>
        <member name="M:ChargifyNET.Usage.CompareTo(ChargifyNET.Usage)">
            <summary>
            Compare this usage to another usage
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.Usage.CompareTo(ChargifyNET.IUsage)">
            <summary>
            Compare this usage to another usage
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:ChargifyNET.Usage.ID">
            <summary>
            The ID of the usage element
            </summary>
        </member>
        <member name="P:ChargifyNET.Usage.Quantity">
            <summary>
            The usage quantity
            </summary>
        </member>
        <member name="P:ChargifyNET.Usage.Memo">
            <summary>
            A note containing information about the usage
            </summary>
        </member>
        <member name="T:ChargifyNET.Json.JsonArray">
            <summary>
            Object representing a JsonArray
            </summary>
        </member>
        <member name="P:ChargifyNET.Json.JsonArray.Items">
            <summary>
            The JsonValue items in the array
            </summary>
        </member>
        <member name="P:ChargifyNET.Json.JsonArray.Length">
            <summary>
            The number of items in the JSON array
            </summary>
        </member>
        <member name="T:ChargifyNET.IComponentAttributes">
            <summary>
            Specfic class when getting information about a component as set to a specific subscription 
            as specified here: http://support.chargify.com/faqs/technical/quantity-based-components
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.Name">
            <summary>
            The name of the component as created by the Chargify user
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.Kind">
            <summary>
            The kind of component, either quantity-based or metered component
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.SubscriptionID">
            <summary>
            The ID of the subscription that this component applies to
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.ComponentID">
            <summary>
            The ID of the component itself
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.AllocatedQuantity">
            <summary>
            The quantity allocated to this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.PricingScheme">
            <summary>
            The method used to charge, either: per-unit, volume, tiered or stairstep
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.UnitName">
            <summary>
            The name for the unit this component is measured in.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.UnitBalance">
            <summary>
            The balance of units of this component against the subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.Enabled">
            <summary>
            The status of whether this component is enabled or disabled.
            (On/Off components only)
            </summary>
        </member>
        <member name="T:ChargifyNET.ChargifyError">
            <summary>
            Error returned from Chargify after an unsuccessful operation
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyError.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyError.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">The string error message to relay to the user</param>
        </member>
        <member name="M:ChargifyNET.ChargifyError.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="errorNode">The XML node that contains the error message</param>
        </member>
        <member name="M:ChargifyNET.ChargifyError.#ctor(ChargifyNET.Json.JsonString)">
            <summary>
            Constructor
            </summary>
            <param name="errorStr">The JsonString obj that contains the error message</param>
        </member>
        <member name="M:ChargifyNET.ChargifyError.ParseChargifyErrors(System.Net.HttpWebResponse)">
            <summary>
            Method to parse the errors returned from Chargify after an unsuccessful interaction
            </summary>
            <param name="response">The HttpWebResponse instance which contains the error response</param>
            <returns>The list of errors returned from Chargify</returns>
        </member>
        <member name="P:ChargifyNET.ChargifyError.Message">
            <summary>
            The message from Chargify
            </summary>
        </member>
        <member name="T:ChargifyNET.ChargifyNetException">
            <summary>
            Exception thrown by Chargify.NET library when things don't add up
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyNetException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">The message of this exception</param>
        </member>
        <member name="T:ChargifyNET.ChargifyException">
            <summary>
            Exception thrown by the chargify system when a request fails
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyException.#ctor(System.Net.HttpWebResponse,System.Net.WebException)">
            <summary>
            Constructor
            </summary>
            <param name="errorResponse">The response that caused the exception</param>
            <param name="wex">The original web exception.  This becomes the inner exception of ths exception</param>
        </member>
        <member name="M:ChargifyNET.ChargifyException.#ctor(System.Net.HttpWebResponse,System.Net.WebException,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="errorResponse">The response that caused the exception</param>
            <param name="wex">The original web exception.  This becomes the inner exception of ths exception</param>
            <param name="postData">The data posted that could have potentially caused the exception.</param>
        </member>
        <member name="M:ChargifyNET.ChargifyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Get object data
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyException.StatusDescription">
            <summary>
            Get the status description
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyException.StatusCode">
            <summary>
            Get the status code
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyException.LastDataPosted">
            <summary>
            Get the last data posted that potentially caused the exception
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyException.ErrorMessages">
            <summary>
            List of ChargifyErrors returned from Chargify.
            </summary>
        </member>
        <member name="T:ChargifyNET.ComponentAttributes">
            <summary>
            Specfic class when getting information about a component as set to a specific subscription 
            as specified here: http://support.chargify.com/faqs/technical/quantity-based-components
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentAttributes.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentAttributes.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="componentAttributesXML">An XML string containing a component node</param>
        </member>
        <member name="M:ChargifyNET.ComponentAttributes.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="componentAttributeNode">An xml node with usage information</param>
        </member>
        <member name="M:ChargifyNET.ComponentAttributes.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="componentAttributesObject">An JsonObject with component information</param>
        </member>
        <member name="M:ChargifyNET.ComponentAttributes.CompareTo(ChargifyNET.ComponentAttributes)">
            <summary>
            Compare this ComponentAttributes to another
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentAttributes.CompareTo(ChargifyNET.IComponentAttributes)">
            <summary>
            Compare this IComponentAttributes to another
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.Name">
            <summary>
            The name of the component as created by the Chargify user
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.Kind">
            <summary>
            The kind of component, either quantity-based or metered component
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.SubscriptionID">
            <summary>
            The ID of the subscription that this component applies to
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.ComponentID">
            <summary>
            The ID of the component itself
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.AllocatedQuantity">
            <summary>
            The quantity allocated to this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.PricingScheme">
            <summary>
            The method used to charge, either: per-unit, volume, tiered or stairstep
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.UnitName">
            <summary>
            The name for the unit this component is measured in.
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.UnitBalance">
            <summary>
            The balance of units of this component against the subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.Enabled">
            <summary>
            The status of whether this component is enabled or disabled.
            (On/Off components only)
            </summary>
        </member>
        <member name="T:ChargifyNET.Statement">
            <summary>
            The statement object
            http://docs.chargify.com/statements
            </summary>
        </member>
        <member name="T:ChargifyNET.IStatement">
            <summary>
            The statment object.
            http://docs.chargify.com/statements
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.ID">
            <summary>
            The unique identifier for this statement within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.SubscriptionID">
            <summary>
            The unique identifier of the subscription associated with this statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.OpenedAt">
            <summary>
            The date that the statement was opened
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.ClosedAt">
            <summary>
            The date that the statement was closed
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.SettledAt">
            <summary>
            The date that the statement was settled
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.TextView">
            <summary>
            A text representation of the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.BasicHtmlView">
            <summary>
            A simple HTML representation of the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.HtmlView">
            <summary>
            A more rebust HTML representation of the statment
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.FuturePayments">
            <summary>
            A collection of payments from future sttments that pay charges on this statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.StartingBalanceInCents">
            <summary>
            The subscription's balance at the time the statement was opened (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.StartingBalance">
            <summary>
            The subscription's balance at the time the statement was opened (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.EndingBalanceInCents">
            <summary>
            The subscription's balance at the time the statement was closed (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.EndingBalance">
            <summary>
            The subscription's balance at the time the statement was closed (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerFirstName">
            <summary>
            The customer's first name
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerLastName">
            <summary>
            The customer's last name
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerOrganization">
            <summary>
            The customer's organization
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerShippingAddress">
            <summary>
            The customer's shipping address, line 1
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerShippingAddress2">
            <summary>
            The customer's shipping address, line 2
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerShippingCity">
            <summary>
            The customer's shipping city
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerShippingState">
            <summary>
            The customer's shipping state or province
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerShippingCountry">
            <summary>
            The customer's shipping country
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerShippingZip">
            <summary>
            The customer's shipping postal code or zip
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerBillingAddress">
            <summary>
            The customer's billing address, line 1
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerBillingAddress2">
            <summary>
            The customer's billing address, line 2
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerBillingCity">
            <summary>
            The customer's billing city
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerBillingState">
            <summary>
            The customer's billing state or province
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerBillingCountry">
            <summary>
            The customer's billing country
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerBillingZip">
            <summary>
            The customer's billing postal code or zip
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.Transactions">
            <summary>
            A collection of the transactions associated with the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.Events">
            <summary>
            A collection of the events associated with the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CreatedAt">
            <summary>
            The creation date for this statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.UpdatedAt">
            <summary>
            The date of last update for this statement
            </summary>
        </member>
        <member name="M:ChargifyNET.Statement.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Statement.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="StatementXML">XML containing statement info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Statement.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="statementNode">XML containing statement info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Statement.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="statementObject">Json containing statement info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Statement.LoadFromJSON(ChargifyNET.Json.JsonObject)">
            <summary>
            Loads the values for this object from the Json
            </summary>
            <param name="obj">The JsonObject to retrieve the values from</param>
        </member>
        <member name="M:ChargifyNET.Statement.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a statement node
            </summary>
            <param name="statementNode">The statement node</param>
        </member>
        <member name="M:ChargifyNET.Statement.CompareTo(ChargifyNET.IStatement)">
            <summary>
            Method for comparing this IStatement object to another (using ID)
            </summary>
            <param name="other">The other IStatement object to compare against.</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Statement.CompareTo(ChargifyNET.Statement)">
            <summary>
            Method for comparing this Statement object to another (using ID)
            </summary>
            <param name="other">The other Statement object to compare against.</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="P:ChargifyNET.Statement.ID">
            <summary>
            The unique identifier for this statement within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.SubscriptionID">
            <summary>
            The unique identifier of the subscription associated with this statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.OpenedAt">
            <summary>
            The date that the statement was opened
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.ClosedAt">
            <summary>
            The date that the statement was closed
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.SettledAt">
            <summary>
            The date that the statement was settled
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.TextView">
            <summary>
            A text representation of the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.BasicHtmlView">
            <summary>
            A simple HTML representation of the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.HtmlView">
            <summary>
            A more rebust HTML representation of the statment
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.FuturePayments">
            <summary>
            A collection of payments from future sttments that pay charges on this statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.StartingBalanceInCents">
            <summary>
            The subscription's balance at the time the statement was opened (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.StartingBalance">
            <summary>
            The subscription's balance at the time the statement was opened (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.EndingBalanceInCents">
            <summary>
            The subscription's balance at the time the statement was closed (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.EndingBalance">
            <summary>
            The subscription's balance at the time the statement was closed (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerFirstName">
            <summary>
            The customer's first name
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerLastName">
            <summary>
            The customer's last name
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerOrganization">
            <summary>
            The customer's organization
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerShippingAddress">
            <summary>
            The customer's shipping address, line 1
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerShippingAddress2">
            <summary>
            The customer's shipping address, line 2
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerShippingCity">
            <summary>
            The customer's shipping city
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerShippingState">
            <summary>
            The customer's shipping state or province
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerShippingCountry">
            <summary>
            The customer's shipping country
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerShippingZip">
            <summary>
            The customer's shipping postal code or zip
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerBillingAddress">
            <summary>
            The customer's billing address, line 1
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerBillingAddress2">
            <summary>
            The customer's billing address, line 2
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerBillingCity">
            <summary>
            The customer's billing city
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerBillingState">
            <summary>
            The customer's billing state or province
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerBillingCountry">
            <summary>
            The customer's billing country
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerBillingZip">
            <summary>
            The customer's billing postal code or zip
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.Transactions">
            <summary>
            A collection of the transactions associated with the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.Events">
            <summary>
            A collection of the events associated with the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CreatedAt">
            <summary>
            The creation date for this statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.UpdatedAt">
            <summary>
            The date of last update for this statement
            </summary>
        </member>
        <member name="T:ChargifyNET.ISiteStatistics">
            <summary>
            The stats object for a site
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.SellerName">
            <summary>
            The name of the seller who "owns" the site.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.SiteName">
            <summary>
            The name of the site
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.TotalSubscriptions">
            <summary>
            The total number of active subscriptions
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.SubscriptionsToday">
            <summary>
            The total number of signups today
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.TotalRevenue">
            <summary>
            Total site revenue
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.RevenueToday">
            <summary>
            Today's revenue
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.RevenueThisMonth">
            <summary>
            The site revenue for this month
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.RevenueThisYear">
            <summary>
            The site revenue for this year
            </summary>
        </member>
        <member name="T:ChargifyNET.CreditCardAttributes">
            <summary>
            Class representing credit card attributes associated with a new subscription
            </summary>
        </member>
        <member name="T:ChargifyNET.ICreditCardAttributes">
            <summary>
            Interface representing credit card attributes
            </summary>
        </member>
        <member name="P:ChargifyNET.ICreditCardAttributes.CVV">
            <summary>
            Get or set the CVV number on the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.ICreditCardAttributes.BillingAddress">
            <summary>
            Get or set the billing address of the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.ICreditCardAttributes.BillingCity">
            <summary>
            Get or set the billing city of the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.ICreditCardAttributes.BillingState">
            <summary>
            Get or set the billing state or province of the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.ICreditCardAttributes.BillingZip">
            <summary>
            Get or set the billing zip code or postal code of the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.ICreditCardAttributes.BillingCountry">
            <summary>
            Get or set the billing country of the credit card
            </summary>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.#ctor">
            <summary>
            Contructor
            </summary>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="FirstName">The first name on the credit card</param>
            <param name="LastName">The last name on the credit card</param>
            <param name="FullNumber">The full credit card number</param>
            <param name="ExpirationYear">The expiration year</param>
            <param name="ExpirationMonth">The expiration month</param>
            <param name="CVV">The CVV number of the credit card</param>
            <param name="BillingAddress">THe billing address of the credit card</param>
            <param name="BillingCity">The billing city of the credit card</param>
            <param name="BillingState">The billing state or province of the credit card</param>
            <param name="BillingZip">The billing zip code or postal code of the credit card</param>
            <param name="BillingCountry">The billing country of the credit card</param>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.op_Equality(ChargifyNET.CreditCardAttributes,ChargifyNET.CreditCardAttributes)">
            <summary>
            Equals operator for two credit card attributes
            </summary>
            <returns>True if the credit card attributes are equal</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.op_Inequality(ChargifyNET.CreditCardAttributes,ChargifyNET.CreditCardAttributes)">
            <summary>
            Unequal operator for two credit card attributes
            </summary>
            <returns>True if the credit card attributes are unequal</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.op_Equality(ChargifyNET.ICreditCardAttributes,ChargifyNET.CreditCardAttributes)">
            <summary>
            Equals operator for two credit card attributes
            </summary>
            <returns>True if the credit card attributes are equal</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.op_Inequality(ChargifyNET.ICreditCardAttributes,ChargifyNET.CreditCardAttributes)">
            <summary>
            Unequal operator for two credit card attributes
            </summary>
            <returns>True if the credit card attributes are unequal</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.op_Equality(ChargifyNET.CreditCardAttributes,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Equals operator for two credit card attributes
            </summary>
            <returns>True if the credit card attributes are equal</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.op_Inequality(ChargifyNET.CreditCardAttributes,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Unequal operator for two credit card attributes
            </summary>
            <returns>True if the credit card attributes are unequal</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.ToString">
            <summary>
            Represent this object as a string
            </summary>
            <returns>A string representation of the object</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.Equals(System.Object)">
            <summary>
            Equal operator
            </summary>
            <param name="obj">the object to compare</param>
            <returns>true if they are equal</returns>
        </member>
        <member name="P:ChargifyNET.CreditCardAttributes.CVV">
            <summary>
            Get or set the CVV number on the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.CreditCardAttributes.BillingAddress">
            <summary>
            Get or set the billing address of the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.CreditCardAttributes.BillingCity">
            <summary>
            Get or set the billing city of the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.CreditCardAttributes.BillingState">
            <summary>
            Get or set the billing state or province of the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.CreditCardAttributes.BillingZip">
            <summary>
            Get or set the billing zip code or postal code of the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.CreditCardAttributes.BillingCountry">
            <summary>
            Get or set the billing country of the credit card
            </summary>
        </member>
        <member name="T:ChargifyNET.Configuration.ChargifyAccountRetrieverSection">
            <summary>
            Class that deals with getting the account elements in web.config
            </summary>
        </member>
        <member name="M:ChargifyNET.Configuration.ChargifyAccountRetrieverSection.GetDefaultOrFirst">
            <summary>
            Method that gets the default (as specified via the DefaultAccount property) or the first
            </summary>
        </member>
        <member name="M:ChargifyNET.Configuration.ChargifyAccountRetrieverSection.GetSharedKeyForDefaultOrFirstSite">
            <summary>
            Method for getting the shared key for the default site
            </summary>
            <returns>The shared key for the default site, if applicable</returns>
        </member>
        <member name="P:ChargifyNET.Configuration.ChargifyAccountRetrieverSection.DefaultAccount">
            <summary>
            The name of the default account, to be used in GetDefaultOrFirst() method.
            </summary>
        </member>
        <member name="P:ChargifyNET.Configuration.ChargifyAccountRetrieverSection.UseJSON">
            <summary>
            Should Chargify.NET use JSON or XML. UseJSON = false by default (ie XML by default)
            </summary>
        </member>
        <member name="P:ChargifyNET.Configuration.ChargifyAccountRetrieverSection.Accounts">
            <summary>
            The collection of Chargify Account elements
            </summary>
        </member>
        <member name="T:ChargifyNET.ChargifyPage">
            <summary>
            Base Web.UI.Page that contains the Chargify property accessor
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyPage.Chargify">
            <summary>
            The ChargifyConnect object that allows you to make API calls via Chargify.NET
            </summary>
        </member>
        <member name="T:ChargifyNET.SubscriptionPostbackHandler">
            <summary>
            IHttpHandler which processes any postback subscription calls FROM chargify and parses the result.
            To implement, inherit this class and override the OnChargifyUpdate method.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionPostbackHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Because of the way that this IHttpHander is setup in the web.config,
            <example><add verb="POST" path="Update.axd" type="PostbackHandler" /></example>
            this request will only be handling POST updates, which is what the Chargify system will
            be sending.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionPostbackHandler.OnChargifyUpdate(System.String[])">
            <summary>
            The method that gets called when an update occurs
            </summary>
            <param name="ids">The list of subscription IDs which have been updated/altered</param>
        </member>
        <member name="P:ChargifyNET.SubscriptionPostbackHandler.IsReusable">
            <summary>
            You will need to configure this handler in the web.config file of your 
            web and register it with IIS before being able to use it. For more information
            see the following link: http://go.microsoft.com/?linkid=8101007
            </summary>
        </member>
        <member name="T:ChargifyNET.SiteStatistics">
            <summary>
            The statistics object for a site
            </summary>
        </member>
        <member name="M:ChargifyNET.SiteStatistics.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.SiteStatistics.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="statsObject">An JsonObject with stats information</param>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.SellerName">
            <summary>
            The name of the seller who "owns" the site.
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.SiteName">
            <summary>
            The name of the site
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.TotalSubscriptions">
            <summary>
            The total number of active subscriptions
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.SubscriptionsToday">
            <summary>
            The total number of signups today
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.TotalRevenue">
            <summary>
            Total site revenue
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.RevenueToday">
            <summary>
            Today's revenue
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.RevenueThisMonth">
            <summary>
            The site revenue for this month
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.RevenueThisYear">
            <summary>
            The site revenue for this year
            </summary>
        </member>
        <member name="T:ChargifyNET.Json.JsonObject">
            <summary>
            Object representing a JsonObject
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonObject.TryGetValue(System.String,ChargifyNET.Json.JsonValue@)">
            <summary>
            Method used to attempt to get a value from this Object
            </summary>
            <param name="key">The proposed key</param>
            <param name="value">The value to retrieve it to</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.Json.JsonObject.ContainsKey(System.String)">
            <summary>
            Does this object contain the specified key?
            </summary>
            <param name="key">The key in question</param>
            <returns>True if found, false otherwise. NullReferenceException if no key passed in.</returns>
        </member>
        <member name="M:ChargifyNET.Json.JsonObject.Parse(System.String)">
            <summary>
            Parsing method, used to parse JSON string into JsonObject
            </summary>
            <param name="str">The string to parse</param>
            <returns>JsonObject if applicable, null otherwise. JsonParseException if not properly formatted.</returns>
        </member>
        <member name="P:ChargifyNET.Json.JsonObject.Item(System.String)">
            <summary>
            Enumerator into this object
            </summary>
            <param name="key">The string key to evaluate</param>
            <returns>The JsonValue at key</returns>
        </member>
        <member name="P:ChargifyNET.Json.JsonObject.Keys">
            <summary>
            Returns the collection of keys from this object
            </summary>
        </member>
        <member name="T:ChargifyNET.Component">
            <summary>
            Metered Components are a way to offer Customers a product that is billed on a per-usage basis.
            </summary>
        </member>
        <member name="M:ChargifyNET.Component.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.Component.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ComponentXML">An XML string containing a component node</param>
        </member>
        <member name="M:ChargifyNET.Component.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="usageNode">An xml node with usage information</param>
        </member>
        <member name="M:ChargifyNET.Component.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="usageObject">An JsonObject with usage information</param>
        </member>
        <member name="M:ChargifyNET.Component.CompareTo(ChargifyNET.IComponent)">
            <summary>
            Compare this IComponent to another
            </summary>
        </member>
        <member name="M:ChargifyNET.Component.CompareTo(ChargifyNET.Component)">
            <summary>
            Compare this Component to another
            </summary>
        </member>
        <member name="P:ChargifyNET.Component.ID">
            <summary>
            The ID for this metered component
            </summary>
        </member>
        <member name="P:ChargifyNET.Component.Quantity">
            <summary>
            The amount of units used
            </summary>
        </member>
        <member name="P:ChargifyNET.Component.Memo">
            <summary>
            An optional description for this metered component
            </summary>
        </member>
        <member name="T:ChargifyNET.Credit">
            <summary>
            One-time (or one-off) credit for arbitrary amount
            </summary>
        </member>
        <member name="T:ChargifyNET.ICredit">
            <summary>
            One-time (or one-off) credit for arbitrary amount
            </summary>
        </member>
        <member name="P:ChargifyNET.ICredit.Success">
            <summary>
            Either true or false, depending on the success of the credit
            </summary>
        </member>
        <member name="P:ChargifyNET.ICredit.AmountInCents">
            <summary>
            Get the amount, in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.ICredit.Amount">
            <summary>
            Get the amount, in dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.ICredit.Memo">
            <summary>
            The memo for the created credit
            </summary>
        </member>
        <member name="M:ChargifyNET.Credit.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Credit.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="CreditXML">XML containing credit info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Credit.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="creditNode">XML containing credit info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Credit.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="creditObject">JsonObject containing credit info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Credit.LoadFromJSON(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject with credit data</param>
        </member>
        <member name="M:ChargifyNET.Credit.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a credit node
            </summary>
            <param name="creditNode">The credit node</param>
        </member>
        <member name="M:ChargifyNET.Credit.CompareTo(ChargifyNET.ICredit)">
            <summary>
            Compare this credit to another
            </summary>
        </member>
        <member name="M:ChargifyNET.Credit.CompareTo(ChargifyNET.Credit)">
            <summary>
            Compare this credit to another
            </summary>
        </member>
        <member name="P:ChargifyNET.Credit.Success">
            <summary>
            Either true or false, depending on the success of the credit
            </summary>
        </member>
        <member name="P:ChargifyNET.Credit.AmountInCents">
            <summary>
            Get the amount, in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Credit.Amount">
            <summary>
            Get the amount, in dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Credit.Memo">
            <summary>
            The memo for the created credit
            </summary>
        </member>
        <member name="T:ChargifyNET.ProductFamily">
            <summary>
            Class representing a product family
            </summary>
        </member>
        <member name="T:ChargifyNET.IProductFamily">
            <summary>
            Interface representing a product family
            </summary>
        </member>
        <member name="P:ChargifyNET.IProductFamily.Name">
            <summary>
            Get the name of the product family
            </summary>
        </member>
        <member name="P:ChargifyNET.IProductFamily.ID">
            <summary>
            Get the ID of the product family
            </summary>
        </member>
        <member name="P:ChargifyNET.IProductFamily.Handle">
            <summary>
            Get the handle to the product family
            </summary>
        </member>
        <member name="P:ChargifyNET.IProductFamily.AccountingCode">
            <summary>
            Get the accounting code for the product family
            </summary>
        </member>
        <member name="P:ChargifyNET.IProductFamily.Description">
            <summary>
            Get the description of the product family
            </summary>
        </member>
        <member name="M:ChargifyNET.ProductFamily.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ProductFamily.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ProductFamilyXML">The xml data containing information about the product family (to be parsed)</param>
        </member>
        <member name="M:ChargifyNET.ProductFamily.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="productFamilyNode">An xml node containing product family information</param>
        </member>
        <member name="M:ChargifyNET.ProductFamily.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="productFamilyObject">JsonObject containing product family info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.ProductFamily.LoadJSONData(ChargifyNET.Json.JsonObject)">
            <summary>
            Load product family data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing product family data</param>
        </member>
        <member name="M:ChargifyNET.ProductFamily.op_Equality(ChargifyNET.ProductFamily,ChargifyNET.ProductFamily)">
            <summary>
            Equals operator for two product families
            </summary>
            <returns>True if the products are equal</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.op_Equality(ChargifyNET.ProductFamily,ChargifyNET.IProductFamily)">
            <summary>
            Equals operator for two product families
            </summary>
            <returns>True if the products are equal</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.op_Equality(ChargifyNET.IProductFamily,ChargifyNET.ProductFamily)">
            <summary>
            Equals operator for two product families
            </summary>
            <returns>True if the products are equal</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.op_Inequality(ChargifyNET.ProductFamily,ChargifyNET.ProductFamily)">
            <summary>
            Not Equals operator for two product families
            </summary>
            <returns>True if the products are not equal</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.op_Inequality(ChargifyNET.ProductFamily,ChargifyNET.IProductFamily)">
            <summary>
            Not Equals operator for two product families
            </summary>
            <returns>True if the products are not equal</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.op_Inequality(ChargifyNET.IProductFamily,ChargifyNET.ProductFamily)">
            <summary>
            Not Equals operator for two product families
            </summary>
            <returns>True if the products are not equal</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.GetHashCode">
            <summary>
            Get Hash code
            </summary>
        </member>
        <member name="M:ChargifyNET.ProductFamily.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:ChargifyNET.ProductFamily.ToString">
            <summary>
            Convert object to a string
            </summary>
            <returns>The string representation of the object</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.CompareTo(ChargifyNET.IProductFamily)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.CompareTo(ChargifyNET.ProductFamily)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="P:ChargifyNET.ProductFamily.Name">
            <summary>
            Get the name of the product family
            </summary>
        </member>
        <member name="P:ChargifyNET.ProductFamily.Handle">
            <summary>
            Get the handle to the product family
            </summary>
        </member>
        <member name="P:ChargifyNET.ProductFamily.ID">
            <summary>
            Get the id of the product family
            </summary>
        </member>
        <member name="P:ChargifyNET.ProductFamily.AccountingCode">
            <summary>
            Get the accounting code for the product family
            </summary>
        </member>
        <member name="P:ChargifyNET.ProductFamily.Description">
            <summary>
            Get the description of the product family
            </summary>
        </member>
        <member name="T:ChargifyNET.ICreditCardView">
            <summary>
            Interface representing viewing information for a credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.ICreditCardView.Type">
            <summary>
            Get or set the type of the credit card (Visa, MasterCharge. etc.)
            </summary>
        </member>
        <member name="T:ChargifyNET.Json.JsonString">
            <summary>
            Object representing the JsonString
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonString.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="value">The value of this JsonString</param>
        </member>
        <member name="M:ChargifyNET.Json.JsonString.ToString">
            <summary>
            String value of this JsonString (same as Value)
            </summary>
            <returns></returns>
        </member>
        <member name="P:ChargifyNET.Json.JsonString.Value">
            <summary>
            The value of this JsonString
            </summary>
        </member>
        <member name="T:ChargifyNET.CreditCardView">
            <summary>
            Class representing view information for a credit card
            </summary>
        </member>
        <member name="M:ChargifyNET.CreditCardView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.CreditCardView.ToString">
            <summary>
            Represent this object as a string
            </summary>
            <returns>A string representation of the object</returns>
        </member>
        <member name="P:ChargifyNET.CreditCardView.Type">
            <summary>
            Get or set the type of the credit card (Visa, Mastercard. etc.)
            </summary>
        </member>
        <member name="T:ChargifyNET.Json.JsonHelper">
            <summary>
            Methods useful for parsing and getting types
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonHelper.GetJsonStringAsString(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting a JsonString as a System.String
            </summary>
            <param name="jsonObject">The object to get a string from</param>
            <param name="fieldName">The field to retrieve</param>
            <returns>The string if applicable, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.Json.JsonHelper.GetJsonStringAsString(ChargifyNET.Json.JsonObject,System.String,System.String)">
            <summary>
            Method for getting a System.String from a JsonString
            </summary>
            <param name="jsonObject">The object to get a string from</param>
            <param name="fieldName">The field to retrieve</param>
            <param name="defaultValue">The default value to return if not found.</param>
            <returns>The string if applicable, defaultValue otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.Json.JsonHelper.ValidateJsonField(ChargifyNET.Json.JsonObject,System.String,System.Type)">
            <summary>
            Method useful for validating that an object can be converted into a type
            </summary>
            <param name="jsonObject">The jsonObject to validate</param>
            <param name="fieldName">The field of the JsonObject to validate</param>
            <param name="fieldType">The type to try to validate against</param>
        </member>
        <member name="T:ChargifyNET.CardType">
            <summary>
            The types of credit cards supported by Chargify internally
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Visa">
            <summary>
            Visa
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Master">
            <summary>
            Mastercard
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Discover">
            <summary>
            Discover
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.American_Express">
            <summary>
            American Express
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Diners_Club">
            <summary>
            Diners Club
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.JCB">
            <summary>
            JCB
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Switch">
            <summary>
            Switch
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Solo">
            <summary>
            Solo
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Dankort">
            <summary>
            Dankort
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Maestro">
            <summary>
            Maestro
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Forbrugsforeningen">
            <summary>
            Forbrugsforeningen
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Laser">
            <summary>
            Laser
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Unknown">
            <summary>
            Internal value used to determine if the field has been set.
            </summary>
        </member>
        <member name="T:ChargifyNET.VaultType">
            <summary>
            The vaults supported by Chargify for importing
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.AuthorizeNET">
            <summary>
            Authorize.NET
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Trust_Commerce">
            <summary>
            Trust Commerce
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Payment_Express">
            <summary>
            Payment Express
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Beanstream">
            <summary>
            Beanstream
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Braintree1">
            <summary>
            Braintree Version 1
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Unknown">
            <summary>
            Internal value used to determine if the field has been set.
            </summary>
        </member>
        <member name="T:ChargifyNET.IPaymentProfileAttributes">
            <summary>
            Class which can be used to "import" subscriptions via the API into Chargify
            Info here: http://support.chargify.com/faqs/api/api-subscription-and-stored-card-token-imports
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.VaultToken">
            <summary>
            The "token" provided by your vault storage for an already stored payment profile
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.CustomerVaultToken">
            <summary>
            (Only for Authorize.NET CIM storage) The "customerProfileId" for the owner of the
            "customerPaymentProfileId" provided as the VaultToken
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.CurrentVault">
            <summary>
            The vault that stores the payment profile with the provided VaultToken
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.ExpirationYear">
            <summary>
            The year of expiration
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.ExpirationMonth">
            <summary>
            The month of expiration
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.CardType">
            <summary>
            (Optional) If you know the card type, you may supply it here so that we may display 
            the card type in the UI.
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.LastFour">
            <summary>
            (Optional) If you have the last 4 digits of the credit card number, you may supply
            them here so we may create a masked card number for display in the UI
            </summary>
        </member>
        <member name="T:ChargifyNET.IChargifyConnect">
            <summary>
            Wrapper interface
            </summary>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateAdjustment(System.Int32,System.Decimal,System.String)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to adjust</param>
            <param name="amount">The amount (in dollars and cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateAdjustment(System.Int32,System.Decimal,System.String,ChargifyNET.AdjustmentMethod)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to adjust</param>
            <param name="amount">The amount (in dollars and cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <param name="method">A string that toggles how the adjustment should be applied</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateAdjustment(System.Int32,System.Int32,System.String)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to adjust</param>        
            <param name="amount_in_cents">The amount (in cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateAdjustment(System.Int32,System.Int32,System.String,ChargifyNET.AdjustmentMethod)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to adjust</param>        
            <param name="amount_in_cents">The amount (in cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <param name="method">A string that toggles how the adjustment should be applied</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.SetComponent(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Method for turning on or off a component
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify</param>
            <param name="ComponentID">The ID of the component (on/off only) to modify</param>
            <param name="SetEnabled">True if wanting to turn the component "on", false otherwise.</param>
            <returns>IComponentAttributes object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.AddCoupon(System.Int32,System.String)">
            <summary>
            Method to add a coupon to a subscription using the API
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify</param>
            <param name="CouponCode">The code of the coupon to apply to the subscription</param>
            <returns>The subscription details if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.AddUsage(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Method for adding a metered component usage to the subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to modify</param>
            <param name="ComponentID">The ID of the component (metered or quantity) to add a usage of</param>
            <param name="Quantity">The number of usages to add</param>
            <param name="Memo">The memo for the usage</param>
            <returns>The usage added if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateProduct(System.Int32,ChargifyNET.IProduct)">
            <summary>
            Method to create a new product and add it to the site
            </summary>
            <param name="ProductFamilyID">The product family to which this new product should be added</param>
            <param name="NewProduct">The new product details</param>
            <returns>The completed product information</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateCharge(System.Int32,ChargifyNET.ICharge)">
            <summary>
            Create a new one-time charge
            </summary>
            <param name="SubscriptionID">The subscription that will be charged</param>
            <param name="Charge">The charge parameters</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateCharge(System.Int32,System.Decimal,System.String)">
            <summary>
            Create a new one-time charge
            </summary>
            <param name="SubscriptionID">The subscription that will be charged</param>
            <param name="amount">The amount to charge the customer</param>
            <param name="memo"></param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateCredit(System.Int32,ChargifyNET.ICredit)">
            <summary>
            Create a new one-time credit
            </summary>
            <param name="SubscriptionID">The subscription that will be credited</param>
            <param name="Credit">The credit parameters</param>
            <returns>The object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateCredit(System.Int32,System.Decimal,System.String)">
            <summary>
            Create a new one-time credit
            </summary>
            <param name="SubscriptionID">The subscription that will be credited</param>
            <param name="amount">The amount to credit the customer</param>
            <param name="memo">A note regarding the reason for the credit</param>
            <returns>The object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateCustomer(ChargifyNET.ICustomer)">
            <summary>
            Create a new chargify customer
            </summary>
            <param name="Customer">
            A customer object containing customer attributes.  The customer cannot be an existing saved chargify customer
            </param>
            <returns>The created chargify customer</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateCustomer(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a new chargify customer
            </summary>
            <param name="FirstName">The first name of the customer</param>
            <param name="LastName">The last name of the customer</param>
            <param name="EmailAddress">The email address of the customer</param>
            <param name="Organization">The organization of the customer</param>
            <param name="SystemID">The system ID fro the customer</param>
            <returns>The created chargify customer</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time without submitting CreditCard attributes
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,System.DateTime,ChargifyNET.IPaymentProfileAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time and import the card data from a specific vault storage
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="NextBillingAt">DateTime for this customer to be assessed at</param>
            <param name="ExistingProfile">Data concerning the existing profile in vault storage</param>
            <returns>The xml describing the new subscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.Int32,System.Int32)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="AllocatedQuantity">The component allocation to send when creating the subscription</param>
            <param name="ComponentID">The component to reference when creating the subscription</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,System.Int32)">
            <summary>
            Create a new subscription without passing credit card information.
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="ChargifyID">The Chargify ID of the customer</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,System.Int32,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="ChargifyID">The Chargify ID of the customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,System.Int32,System.String)">
            <summary>
            Create a subscription using a coupon for discounted rate, without using credit card information.
            </summary>
            <param name="ProductHandle">The product to subscribe to</param>
            <param name="ChargifyID">The ID of the Customer to add the subscription for</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>If sucessful, the subscription object. Otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,System.String)">
            <summary>
            Create a new subscription without requiring credit card information
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,System.String,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.String)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.String,System.Int32,System.Int32)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="CouponCode">The discount coupon code</param>
            <param name="ComponentID">The component to allocate when creating the subscription</param>
            <param name="AllocatedQuantity">The quantity to allocate of the component when creating the subscription</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,System.String)">
            <summary>
            Create a new subscription and a new customer at the same time using no credit card information
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,System.String,System.DateTime,ChargifyNET.IPaymentProfileAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time using no credit card information
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CouponCode">The discount coupon code</param>
            <param name="NextBillingAt">DateTime for this customer to be assessed at</param>
            <param name="ExistingProfile">Data concerning the existing profile in vault storage</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.Int32,ChargifyNET.ICreditCardAttributes,System.String)">
            <summary>
            Create a subscription using a coupon for discounted rate
            </summary>
            <param name="ProductHandle">The product to subscribe to</param>
            <param name="ChargifyID">The ID of the Customer to add the subscription for</param>
            <param name="CreditCardAttributes">The credit card attributes to use for this transaction</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.Int32,System.String)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="ChargifyID">The Chargify ID of the customer</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.String,ChargifyNET.ICreditCardAttributes,System.String)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.String,System.String)">
            <summary>
            Create a new subscription without passing credit card info
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.DeleteCustomer(System.Int32)">
            <summary>
            Delete the specified customer
            </summary>
            <param name="ChargifyID">The integer identifier of the customer</param>
            <returns>True if the customer was deleted, false otherwise.</returns>
            <remarks>This method does not currently work, but it will once they open up the API. This will always return false, as Chargify will send a Http Forbidden everytime.</remarks>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.DeleteCustomer(System.String)">
            <summary>
            Delete the specified customer
            </summary>
            <param name="SystemID">The system identifier of the customer.</param>
            <returns>True if the customer was deleted, false otherwise.</returns>
            <remarks>This method does not currently work, but it will once they open up the API. This will always return false, as Chargify will send a Http Forbidden everytime.</remarks>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.DeleteSubscription(System.Int32,System.String)">
            <summary>
            Delete a subscription
            </summary>
            <param name="SubscriptionID">The ID of the sucscription</param>
            <param name="CancellationMessage">The message to associate with the subscription</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.EditSubscriptionProduct(ChargifyNET.ISubscription,ChargifyNET.IProduct)">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="Subscription">The suscription to update</param>
            <param name="Product">The new product</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.EditSubscriptionProduct(ChargifyNET.ISubscription,System.String)">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="Subscription">The suscription to update</param>
            <param name="ProductHandle">The handle to the new product</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.EditSubscriptionProduct(System.Int32,ChargifyNET.IProduct)">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="Product">The new product</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.EditSubscriptionProduct(System.Int32,System.String)">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="ProductHandle">The handle to the new product</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateBillingDateForSubscription(System.Int32,System.DateTime)">
            <summary>
            Method to allow users to change the next_assessment_at date
            </summary>
            <param name="SubscriptionID">The subscription to modify</param>
            <param name="NextBillingAt">The date to next bill the customer</param>
            <returns>Subscription if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateDelayedCancelForSubscription(System.Int32,System.Boolean,System.String)">
            <summary>
            Method to allow users to change the cancel_at_end_of_period flag
            </summary>
            <param name="SubscriptionID">The subscription to modify</param>
            <param name="CancelAtEndOfPeriod">True if the subscription should cancel at the end of the current period</param>
            <param name="CancellationMessage">The reason for cancelling.</param>
            <returns>Subscription if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.FindCoupon(System.Int32,System.String)">
            <summary>
            Retrieve the coupon corresponding to the coupon code, useful for coupon validation.
            </summary>
            <param name="ProductFamilyID">The ID of the product family the coupon belongs to</param>
            <param name="CouponCode">The code used to represent the coupon</param>
            <returns>The object if found, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetComponentList(System.Int32,System.Int32)">
            <summary>
            Method for getting a list of component usages for a specific subscription
            </summary>
            <param name="SubscriptionID">The subscription ID to examine</param>
            <param name="ComponentID">The ID of the component to examine</param>
            <returns>A dictionary of usages if there are results, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetComponentsForProductFamily(System.Int32)">
            <summary>
            Method for getting a list of components for a specific product family
            </summary>
            <param name="ChargifyID">The product family ID</param>
            <returns>A dictionary of components if there are results, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetComponentsForProductFamily(System.Int32,System.Boolean)">
            <summary>
            Method for getting a list of components for a specific product family
            </summary>
            <param name="ChargifyID">The product family ID</param>
            <param name="includeArchived">Filter flag for archived components</param>
            <returns>A dictionary of components if there are results, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetComponentsForSubscription(System.Int32)">
            <summary>
            Returns all components "attached" to that subscription.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to query about</param>
            <returns>A dictionary of components, if applicable.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetCustomerList">
            <summary>
            Get a list of all customers.  Be careful calling this method because a large number of
            customers will result in multiple calls to Chargify
            </summary>
            <returns>A list of customers</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetCustomerList(System.Boolean)">
            <summary>
            Get a list of all customers.  Be careful calling this method because a large number of
            customers will result in multiple calls to Chargify
            </summary>
            <param name="keyByChargifyID">If true, the key will be the ChargifyID, otherwise it will be the reference value</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetCustomerList(System.Int32)">
            <summary>
            Get a list of customers (will return 50 for each page)
            </summary>
            <param name="PageNumber">The page number to load</param>
            <returns>A list of customers for the specified page</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetCustomerList(System.Int32,System.Boolean)">
            <summary>
            Get a list of customers (will return 50 for each page)
            </summary>
            <param name="PageNumber">The page number to load</param>
            /// <param name="keyByChargifyID">If true, the key will be the ChargifyID, otherwise it will be the reference value</param>
            <returns>A list of customers for the specified page</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetPrettySubscriptionUpdateURL(System.String,System.String,System.Int32)">
            <summary>
            Method to get the secure URL (with pretty id) for updating the payment details for a subscription.
            </summary>
            <param name="FirstName">The first name of the customer to add to the pretty url</param>
            <param name="LastName">The last name of the customer to add to the pretty url</param>
            <param name="SubscriptionID">The ID of the subscription to update</param>
            <returns>The secure url of the update page</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetProductList">
            <summary>
            Get a list of products
            </summary>
            <returns>A list of products (keyed by product handle)</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetSubscriptionListForCustomer(System.Int32)">
            <summary>
            Get a list of all subscriptions for a customer.
            </summary>
            <param name="ChargifyID">The ChargifyID of the customer</param>
            <returns>A list of subscriptions</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetSubscriptionUpdateURL(System.Int32)">
            <summary>
            Method to get the secure URL for updating the payment details for a subscription.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to update</param>
            <returns>The secure url of the update page</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList">
            <summary>
            Method for getting a list of transactions
            </summary>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Collections.Generic.List{ChargifyNET.TransactionType})">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="kinds">A list of the types of transactions to return.</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="since_date">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="until_date">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Int32,System.Int32)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType})">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="since_date">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="until_date">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType})">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="since_date">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="until_date">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType})">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="since_date">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="until_date">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadCoupon(System.Int32,System.Int32)">
            <summary>
            Method for retrieving information about a coupon using the ID of that coupon.
            </summary>
            <param name="ProductFamilyID">The ID of the product family that the coupon belongs to</param>
            <param name="CouponID">The ID of the coupon</param>
            <returns>The object if found, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadCustomer(System.Int32)">
            <summary>
            Load the requested customer from chargify
            </summary>
            <param name="ChargifyID">The chargify ID of the customer</param>
            <returns>The customer with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadCustomer(System.String)">
            <summary>
            Load the requested customer from chargify
            </summary>
            <param name="SystemID">The system ID of the customer</param>
            <returns>The customer with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadProduct(System.String)">
            <summary>
            Load the requested product from chargify by its handle
            </summary>
            <param name="Handle">The Chargify ID or handle of the product</param>
            <returns>The product with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadProduct(System.String,System.Boolean)">
            <summary>
            Load the requested product from chargify
            </summary>
            <param name="ProductID">The Chargify ID or handle of the product</param>
            <param name="IsHandle">If true, then the ProductID represents the handle, if false the ProductID represents the Chargify ID</param>
            <returns>The product with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadSubscription(System.Int32)">
            <summary>
            Load the requested customer from chargify
            </summary>
            <param name="SubscriptionID">The ID of the subscription</param>
            <returns>The subscription with the specified ID</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadTransaction(System.Int32)">
            <summary>
            Load the requested transaction from Chargify
            </summary>
            <param name="ID">The ID of the transaction</param>
            <returns>The transaction with the specified ID</returns>
            <remarks>Unfortunately, this resource isn't yet available.</remarks>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetSubscriptionList">
            <summary>
            Method that returns a list of subscriptions.
            </summary>
            <returns>Null if there are no results, object otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetSubscriptionList(System.Collections.Generic.List{ChargifyNET.SubscriptionState})">
            <summary>
            Method that returns a list of subscriptions.
            </summary>
            <param name="states">A list of the states of subscriptions to return</param>
            <returns>Null if there are no results, object otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetSubscriptionList(System.Int32,System.Int32)">
            <summary>
            Method that returns a list of subscriptions.
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <returns>Null if there are no results, object otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.MigrateSubscriptionProduct(ChargifyNET.ISubscription,ChargifyNET.IProduct,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="Subscription">The subscription to migrate</param>
            <param name="Product">The product to migrate the subscription to</param>
            <param name="IncludeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="IncludeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.MigrateSubscriptionProduct(ChargifyNET.ISubscription,System.String,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="Subscription">The subscription to migrate</param>
            <param name="ProductHandle">The product handle of the product to migrate to</param>
            <param name="IncludeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="IncludeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns>The completed subscription if migrated successfully, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.MigrateSubscriptionProduct(System.Int32,ChargifyNET.IProduct,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="SubscriptionID">The subscription to migrate</param>
            <param name="Product">The product to migrate to</param>
            <param name="IncludeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="IncludeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns>The completed subscription if migrated successfully, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.MigrateSubscriptionProduct(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="SubscriptionID">The subscription to migrate</param>
            <param name="ProductHandle">The product handle of the product to migrate to</param>
            <param name="IncludeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="IncludeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns>The completed subscription if migrated successfully, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.ReactivateSubscription(System.Int32)">
            <summary>
            Chargify offers the ability to reactivate a previously canceled subscription. For details
            on how reactivation works, and how to reactivate subscriptions through the Admin interface, see
            http://support.chargify.com/faqs/features/reactivation
            </summary>
            <param name="SubscriptionID">The ID of the subscription to reactivate</param>
            <returns>The newly reactivated subscription, or nothing.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.ReactivateSubscription(System.Int32,System.Boolean)">
            <summary>
            Chargify offers the ability to reactivate a previously canceled subscription. For details
            on how reactivation works, and how to reactivate subscriptions through the Admin interface, see
            http://support.chargify.com/faqs/features/reactivation
            </summary>
            <param name="SubscriptionID">The ID of the subscription to reactivate</param>
            <param name="includeTrial">If true, the reactivated subscription will include a trial if one is available.</param>
            <returns>The newly reactivated subscription, or nothing.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.ResetSubscriptionBalance(System.Int32)">
            <summary>
            Method for reseting a subscription balance to zero (removes outstanding balance). 
            Useful when reactivating subscriptions, and making sure not to charge the user
            their existing balance when then cancelled.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateCustomer(ChargifyNET.ICustomer)">
            <summary>
            Update the specified chargify customer
            </summary>
            <param name="Customer">The customer to update</param>
            <returns>The updated customer</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateSubscriptionCreditCard(ChargifyNET.ISubscription,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="Subscription">The subscription to update credit card info for</param>
            <param name="CreditCardAttributes">The attributes for the updated credit card</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateSubscriptionCreditCard(ChargifyNET.ISubscription,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="Subscription">The subscription to update credit card info for</param>
            <param name="FullNumber">The full number of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationMonth">The expiration month of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
            <param name="CVV">The CVV for the credit card (optional - set to null if not required)</param>
            <param name="BillingAddress">The billing address (optional - set to null if not required)</param>
            <param name="BillingCity">The billing city (optional - set to null if not required)</param>
            <param name="BillingState">The billing state or province (optional - set to null if not required)</param>
            <param name="BillingZip">The billing zip code or postal code (optional - set to null if not required)</param>
            <param name="BillingCountry">The billing country (optional - set to null if not required)</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateSubscriptionCreditCard(System.Int32,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="CreditCardAttributes">The attributes for the update credit card</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateSubscriptionCreditCard(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="FullNumber">The full number of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationMonth">The expiration month of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
            <param name="CVV">The CVV for the credit card (optional - set to null if not required)</param>
            <param name="BillingAddress">The billing address (optional - set to null if not required)</param>
            <param name="BillingCity">The billing city (optional - set to null if not required)</param>
            <param name="BillingState">The billing state or province (optional - set to null if not required)</param>
            <param name="BillingZip">The billing zip code or postal code (optional - set to null if not required)</param>
            <param name="BillingCountry">The billing country (optional - set to null if not required)</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateSubscriptionCreditCard(System.Int32,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="FirstName">The first name on the credit card</param>
            <param name="LastName">The last name on the credit card</param>
            <param name="FullNumber">The full number of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationMonth">The expiration month of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
            <param name="CVV">The CVV for the credit card (optional - set to null if not required)</param>
            <param name="BillingAddress">The billing address (optional - set to null if not required)</param>
            <param name="BillingCity">The billing city (optional - set to null if not required)</param>
            <param name="BillingState">The billing state or province (optional - set to null if not required)</param>
            <param name="BillingZip">The billing zip code or postal code (optional - set to null if not required)</param>
            <param name="BillingCountry">The billing country (optional - set to null if not required)</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateComponentAllocationForSubscription(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method to update the allocated amount of a component for a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify the allocation for</param>
            <param name="ComponentID">The ID of the component</param>
            <param name="NewAllocatedQuantity">The quantity of component to allocate to the subscription</param>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetComponentInfoForSubscription(System.Int32,System.Int32)">
            <summary>
            Method to retrieve the current information (including allocation) of a component against a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription in question</param>
            <param name="ComponentID">The ID of the component</param>
            <returns>The ComponentAttributes object, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateRefund(System.Int32,System.Int32,System.Decimal,System.String)">
            <summary>
            Create a refund
            </summary>
            <param name="SubscriptionID">The ID of the subscription to refund</param>
            <param name="PaymentID">The ID of the payment that the credit will be applied to</param>
            <param name="Amount">The amount (in dollars and cents) like 10.00 is $10.00</param>
            <param name="Memo">A helpful explanation for the refund.</param>
            <returns>The IRefund object indicating successful, or unsuccessful.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateRefund(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Create a refund
            </summary>
            <param name="SubscriptionID">The ID of the subscription to refund</param>
            <param name="PaymentID">The ID of the payment that the credit will be applied to</param>
            <param name="AmountInCents">The amount (in cents only) like 100 is $1.00</param>
            <param name="Memo">A helpful explanation for the refund.</param>
            <returns>The IRefund object indicating successful, or unsuccessful.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadStatement(System.Int32)">
            <summary>
            Method for getting a specific statement
            </summary>
            <param name="StatementID">The ID of the statement to retrieve</param>
            <returns>The statement if found, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetStatementList(System.Int32)">
            <summary>
            Method for getting a list of statments for a specific subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to retrieve the statements for</param>
            <returns>The list of statements, an empty dictionary otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetStatementList(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method for getting a list of statments for a specific subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to retrieve the statements for</param>
            <param name="page">The page number to return</param>
            <param name="per_page">The number of results to return per page</param>
            <returns>The list of statements, an empty dictionary otherwise.</returns>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.apiKey">
            <summary>
            Get or set the API key
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.HasConnected">
            <summary>
            Method for determining if the properties have been set to allow this instance to connect correctly.
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.LastResponse">
            <summary>
            Get a reference to the last Http Response from the chargify server. This is set after every call to
            a Chargify Connect method
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.Password">
            <summary>
            Get or set the password
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.SharedKey">
            <summary>
            SharedKey used for url generation
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.URL">
            <summary>
            Get or set the URL for chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.UseJSON">
            <summary>
            Should Chargify.NET use JSON for output? XML by default.
            </summary>
        </member>
        <member name="T:ChargifyNET.AdjustmentMethod">
            <summary>
            The method to use when adjusting
            </summary>
        </member>
        <member name="F:ChargifyNET.AdjustmentMethod.Default">
            <summary>
            Add (or subtract) from the subscription balance
            </summary>
        </member>
        <member name="F:ChargifyNET.AdjustmentMethod.Target">
            <summary>
            Set the subscription balance to the AmountInCents
            </summary>
        </member>
        <member name="T:ChargifyNET.IAdjustment">
            <summary>
            Adjustments allow you to change the current balance of a subscription.
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.ID">
            <summary>
            The ID of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.Success">
            <summary>
            (Currently, all adjustments return as successful
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.Memo">
            <summary>
            A helpful explaination for the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.AmountInCents">
            <summary>
            The amount of the adjustment (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.Amount">
            <summary>
            The amount of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.EndingBalanceInCents">
            <summary>
            The subscription balance after the adjustment (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.EndingBalance">
            <summary>
            The subscription balance after the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.Type">
            <summary>
            The type of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.TransactionType">
            <summary>
            The type of transaction done by the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.SubscriptionID">
            <summary>
            The subscription the adjustment was created for
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.ProductID">
            <summary>
            The subscribed product at the time of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.CreatedAt">
            <summary>
            The date the adjustment was created
            </summary>
        </member>
        <member name="T:ChargifyNET.SubscriptionState">
            <summary>
            The state of a Chargify subscription
            http://docs.chargify.com/subscription-states
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Trialing">
            <summary>
            A trialing subscription is valid, and may transition to 'active' once the trial is ended and payment is recieved.
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Assessing">
            <summary>
            The 'assessing' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Active">
            <summary>
            The 'active' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Soft_Failure">
            <summary>
            The 'soft_failure' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Past_Due">
            <summary>
            The 'past_due' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Suspended">
            <summary>
            The 'suspended' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Canceled">
            <summary>
            The 'canceled' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Expired">
            <summary>
            The 'expired' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Unpaid">
            <summary>
            The 'unpaid' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Unknown">
            <summary>
            The 'unknown' subscription state, only internal to this wrapper
            </summary>
        </member>
        <member name="T:ChargifyNET.Charge">
            <summary>
            The one-time charge class
            </summary>
        </member>
        <member name="T:ChargifyNET.ICharge">
            <summary>
            The one time charge class
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.Success">
            <summary>
            Either true or false, depending on the success of the charge.
            <remarks>At this time, all charges that are returned will return true here. 
            Flase may be returned in the future when more options are added to the charge creation API</remarks>
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.AmountInCents">
            <summary>
            Get the amount (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.Amount">
            <summary>
            Get the amount, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.Memo">
            <summary>
            The memo for the created charge
            </summary>
        </member>
        <member name="M:ChargifyNET.Charge.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Charge.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ChargeXML">XML containing charge info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Charge.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="chargeNode">XML containing charge info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Charge.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="chargeObject">Json containing charge info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Charge.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a subscription node
            </summary>
            <param name="subscriptionNode">The subscription node</param>
        </member>
        <member name="M:ChargifyNET.Charge.CompareTo(ChargifyNET.ICharge)">
            <summary>
            Compare this instance to another (by AmountInCents)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Charge.CompareTo(ChargifyNET.Charge)">
            <summary>
            Compare this instance to another (by AmountInCents)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="P:ChargifyNET.Charge.Success">
            <summary>
            Either true or false, depending on the success of the charge.
            <remarks>At this time, all charges that are returned will return true here. 
            Flase may be returned in the future when more options are added to the charge creation API</remarks>
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.AmountInCents">
            <summary>
            Get the amount (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.Amount">
            <summary>
            Get the amount, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.Memo">
            <summary>
            The memo for the created charge
            </summary>
        </member>
        <member name="T:ChargifyNET.UsefulExtensions">
            <summary>
            Extension class
            </summary>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.IsChargifyWebhookContentValid(System.String,System.String,System.String)">
            <summary>
            Method for checking if the data passed back via the webhook interface are valid
            </summary>
            <param name="text">The body of the webhook message</param>
            <param name="signature">The signature in the header of the message</param>
            <param name="sharedKey">The site shared key (used to validate)</param>
            <returns>True if the signature matches the calculated value, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetChargifyDirectSignature(System.String,System.String)">
            <summary>
            Method for calculating the chargify direct signature
            </summary>
            <param name="text">Should be the concatenation of api_id, timestamp, nonce and data parameters</param>
            <param name="api_secret">The api secret issued to the API user by Chargify</param>
            <returns>The HMAC-SHA1 signature used to send to Chargify while using the API</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetChargifyHostedToken(System.String)">
            <summary>
            Extension method to change concatenated string into token used in hosted page url's
            </summary>
            <param name="text">The concatenated sting to tokenize</param>
            <returns>The first 10 characters of the hex digest SHA-1 of the message string.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.IsXml(System.String)">
            <summary>
            Method for determining if a string is parsable XML
            </summary>
            <param name="value">The string value to test</param>
            <returns>Returns true if the string is XML parsable, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.IsJSON(System.String)">
            <summary>
            Method for determining if a string is parsable JSON
            </summary>
            <param name="value">The value to test</param>
            <returns>True if the string is JSON parsable, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.IsGuid(System.String)">
            <summary>
            Method for determining if a string is a valid GUID
            </summary>
            <param name="value">The value to examine</param>
            <returns>True if the value is a guid, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.ConvertToGuid(System.String)">
            <summary>
            Method for converting a string to a guid.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The guid object of value.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.ToJson(System.Xml.XmlDocument)">
            <summary>
            Method for converting an XmlDocument to JSON
            </summary>
            <param name="doc">The XmlDocument to convert</param>
            <returns>The JSON result</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.ToChargifyCurrencyFormat(System.Decimal)">
            <summary>
            Method that will change format money fields to something chargify can use.
            </summary>
            <param name="value">An amount, as a decimal type, to format for Chargify</param>
            <returns>The formatted amount.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsDecimal(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a decimal
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The decimal value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsDecimal(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as a decimal
            </summary>
            <param name="obj">The object whose value needs to be extracted</param>
            <param name="key">The key of the string to retrieve</param>
            <returns>The decimal value of the object at key</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsString(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a string
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The string value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsString(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as a string
            </summary>
            <param name="obj">The object whose value needs to be extracted</param>
            <param name="key">The key of the string to retrieve</param>
            <returns>The string value of the object at key</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsInt(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as an integer
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The integer value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsInt(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as an integer
            </summary>
            <param name="obj">The object whose value/key needs to be extracted</param>
            <param name="key">The key of the int to retrieve</param>
            <returns>The integer value of the keyed object</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsProductFamily(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the keyed content of a JsonObject as a product family
            </summary>
            <param name="obj">The object whose value needs to be extracted</param>
            <param name="key">The key of the product family to retrieve</param>
            <returns>The product family value of the object as keyed</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsProductFamily(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a product family
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The product family value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsCustomer(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting a Customer object from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing the Customer data</param>
            <param name="key">They key of the customer object</param>
            <returns>The customer object if possible, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsCustomer(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a customer
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The customer of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsProduct(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the Product from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the Product value from</param>
            <param name="key">The key of the Product field in the JsonObject</param>
            <returns>The Product value, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsProduct(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a Product
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The Product value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsBoolean(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as a boolean
            </summary>
            <param name="obj">The object whose value needs to be extracted</param>
            <param name="key">The key of the JsonObject to get the bool from</param>
            <returns>The boolean value of the object at key</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsBoolean(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a boolean
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The boolean value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsDateTime(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the DateTime from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the DateTime value from</param>
            <param name="key">The key of the DateTime field in the JsonObject</param>
            <returns>The DateTime value, DateTime.MinValue otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsDateTime(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a DateTime object
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The DateTime value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsGuid(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the Guid from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the Guid value from</param>
            <param name="key">The key of the Guid field in the JsonObject</param>
            <returns>The Guid value, Guid.Empty otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsGuid(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a Guid
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The Guid value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsPricingSchemeType(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the PricingSchemeType from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the PricingSchemeType value from</param>
            <param name="key">The key of the PricingSchemeType field in the JsonObject</param>
            <returns>The PricingSchemeType value, PricingSchemeType.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsPricingSchemeType(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a PricingSchemeType
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The PricingSchemeType value of the node, PricingSchemeType.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsComponentType(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the ComponentType from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the ComponentType value from</param>
            <param name="key">The key of the ComponentType field in the JsonObject</param>
            <returns>The ComponentType value, ComponentType.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsComponentType(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a ComponentType
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The ComponentType value of the node, ComponentType.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsTransactionType(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the TransactionType from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the TransactionType value from</param>
            <param name="key">The key of the TransactionType field in the JsonObject</param>
            <returns>The TransactionType value, TransactionType.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsTransactionType(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a TransactionType
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The TransactionType value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsSubscriptionState(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a SubscriptionState
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The SubscriptionState value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsSubscriptionState(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the SubscriptionState from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the SubscriptionState value from</param>
            <param name="key">The key of the SubscriptionState field in the JsonObject</param>
            <returns>The SubscriptionState value, SubscriptionState.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsTransaction(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a Transaction
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The Transaction value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsTransaction(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as a Transaction
            </summary>
            <param name="obj">The object to retrieve the Transaction value from</param>
            <param name="key">The key of the Transaction field in the JsonObject</param>
            <returns>The Transaction value, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.IsRunningAzure">
            <summary>
            Method for determining if the current application is running under Windows Azure (Dev or Live)
            </summary>
            <returns>RoleEnvironment.IsAvailable result if possible, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetLateBoundRoleEnvironmentValue(System.String)">
            <summary>
            Method for accessing RoleEnvironment ConfigurationSettingValues without
            needing a reference to the library. These are late bound.
            </summary>
            <param name="settingName">The key of the config setting to retrieve</param>
            <returns>The value of the keyed config string, if applicable. String.Empty otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.ConvertResponseTo``1(System.String,System.String)">
            <summary>
            Method that converts a string to the object, must be supported XML or JSON
            This is used completely internally to ChargifyConnect
            </summary>
            <typeparam name="T">The type of object to parse the string as</typeparam>
            <param name="serverResponse">The XML or JSON response from Chargify</param>
            <param name="key">The JSON key that corresponds to the object to parse</param>
            <returns>The object of type T</returns>        
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.Save``1(ChargifyNET.ChargifyConnect,``0)">
            <summary>
            Nifty method for saving an object (aka updating) in Chargify, for user application.
            </summary>
            <typeparam name="T">The type of object you wish to save/update</typeparam>
            <param name="chargify">The ChargifyConnect object</param>
            <param name="objectToBeSaved">The object of type T that is to be saved/updated</param>
            <returns>The updated object if applicable, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.Find``1(ChargifyNET.ChargifyConnect,System.Object)">
            <summary>
            Nifty method for retrieving an object from Chargify, for user application.
            </summary>
            <typeparam name="T">The type of object you wish to find</typeparam>
            <param name="chargify">The ChargifyConnect object</param>
            <param name="ID">The ID (or Handle if Product) to find</param>
            <returns>The found object if applicable, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.CalculateSubscriptionRevenue(ChargifyNET.ChargifyConnect,ChargifyNET.ISubscription)">
            <summary>
            Method for calculating the revenue of a subscription
            </summary>
            <param name="chargify">The ChargifyConnect object to use</param>
            <param name="subscription">The subscription from which to calculate the revenue</param>
            <returns>The decimal value of revenue.</returns>
        </member>
        <member name="T:ChargifyNET.Adjustment">
            <summary>
            Adjustments allow you to change the current balance of the subscription. Adjustments with positive
            amounts make the balance go up, adjustments with negative amounts make the balance go down (like credits)
            http://docs.chargify.com/api-adjustments
            </summary>
        </member>
        <member name="M:ChargifyNET.Adjustment.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Adjustment.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="AdjustmentXML">XML containing adjustment info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Adjustment.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="adjustmentNode">XML containing adjustment info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Adjustment.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="adjustmentObject">Json containing adjustment info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Adjustment.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a adjustment node
            </summary>
            <param name="adjustmentNode">The adjustment node</param>
        </member>
        <member name="M:ChargifyNET.Adjustment.CompareTo(ChargifyNET.IAdjustment)">
            <summary>
            Method for comparing two adjustments
            </summary>
            <param name="other">The adjustment to compare with</param>
            <returns>The comparison value</returns>
        </member>
        <member name="M:ChargifyNET.Adjustment.CompareTo(ChargifyNET.Adjustment)">
            <summary>
            Method for comparing two adjustments
            </summary>
            <param name="other">The adjustment to compare with</param>
            <returns>The comparison value</returns>
        </member>
        <member name="P:ChargifyNET.Adjustment.ID">
            <summary>
            The ID of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.AmountInCents">
            <summary>
            The amount of the adjustment (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.Amount">
            <summary>
            The amount of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.EndingBalanceInCents">
            <summary>
            The subscription balance after the adjustment (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.EndingBalance">
            <summary>
            The subscription balance after the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.Type">
            <summary>
            The type of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.TransactionType">
            <summary>
            The type of transaction done by the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.SubscriptionID">
            <summary>
            The subscription the adjustment was created for
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.ProductID">
            <summary>
            The subscribed product at the time of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.CreatedAt">
            <summary>
            The date the adjustment was created
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.Memo">
            <summary>
            A helpful explaination for the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.Success">
            <summary>
            (Currently, all adjustments return as successful
            </summary>
        </member>
        <member name="T:ChargifyNET.PaymentProfileAttributes">
            <summary>
            Class which can be used to "import" subscriptions via the API into Chargify
            Info here: http://support.chargify.com/faqs/api/api-subscription-and-stored-card-token-imports
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileAttributes.#ctor">
            <summary>
            Class which can be used to "import" subscriptions via the API into Chargify
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileAttributes.#ctor(System.String,System.String,ChargifyNET.VaultType,System.Int32,System.Int32,ChargifyNET.CardType,System.String)">
            <summary>
            Class which can be used to "import" subscriptions via the API into Chargify
            </summary>
            <param name="VaultToken">The "token" provided by your vault storage for an already stored payment profile</param>
            <param name="CustomerVaultToken">The "customerProfileId" for the owner of the "customerPaymentProfileId" provided as the VaultToken</param>
            <param name="CurrentVault">The vault that stores the payment profile with the provided VaultToken</param>
            <param name="ExpYear">The year of expiration</param>
            <param name="ExpMonth">The month of expiration</param>
            <param name="CardType">If you know the card type, you may supply it here so that Chargify may display it in the AdminUI</param>
            <param name="LastFourDigits">The last four digits of the credit card for use in masked numbers</param>
        </member>
        <member name="M:ChargifyNET.PaymentProfileAttributes.CompareTo(ChargifyNET.IPaymentProfileAttributes)">
            <summary>
            Method for comparing one IPaymentProfileAttributes to another (by vault token)
            </summary>
            <param name="other">The other IPaymentProfileAttributes to compare with</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.PaymentProfileAttributes.CompareTo(ChargifyNET.PaymentProfileAttributes)">
            <summary>
            Method for comparing one PaymentProfileAttributes to another (by vault token)
            </summary>
            <param name="other">The other PaymentProfileAttributes to compare with</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.VaultToken">
            <summary>
            The "token" provided by your vault storage for an already stored payment profile
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.CustomerVaultToken">
            <summary>
            (Only for Authorize.NET CIM storage) The "customerProfileId" for the owner of the
            "customerPaymentProfileId" provided as the VaultToken
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.CurrentVault">
            <summary>
            The vault that stores the payment profile with the provided VaultToken
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.ExpirationYear">
            <summary>
            The year of expiration
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.ExpirationMonth">
            <summary>
            The month of expiration
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.CardType">
            <summary>
            (Optional) If you know the card type, you may supply it here so that we may display 
            the card type in the UI.
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.LastFour">
            <summary>
            (Optional) If you have the last 4 digits of the credit card number, you may supply
            them here so we may create a masked card number for display in the UI
            </summary>
        </member>
        <member name="T:ChargifyNET.Data.CountryNameLookup">
            <summary>
            Since Chargify suggests using ISO 3166-1 Alpha 2 for the country codes, provide some data to users.
            </summary>
        </member>
        <member name="M:ChargifyNET.Data.CountryNameLookup.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.Data.CountryNameLookup.GetCountryName(System.String)">
            <summary>
            Method for retrieving the country name from the 2 letter country code (as defined in the ISON 3166-1 Alpha 2 list)
            </summary>
            <param name="countryCode2">The two letter country code</param>
            <returns>Return the name of the country if applicable, String.Empty otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.Data.CountryNameLookup.GetData">
            <summary>
            Method for getting a Dictionary of the country/codes listed in ISO 3166-1 Alpha 2 list
            http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
            </summary>
            <returns>The dictionary of data in ISO 3166-1 Alpha 2</returns>
        </member>
        <member name="T:ChargifyNET.Json.JsonNumber">
            <summary>
            Object representing a JsonNumber
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonNumber.#ctor(System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="value">The double value of the object</param>
        </member>
        <member name="M:ChargifyNET.Json.JsonNumber.IsNumberPart(System.Char)">
            <summary>
            Static method used to determine if a character is a digit or part of a number
            </summary>
            <param name="ch">The character to examine</param>
            <returns>True if it is part of a number, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.Json.JsonNumber.ToString">
            <summary>
            Method for getting the string representation of the double value
            </summary>
            <returns></returns>
        </member>
        <member name="P:ChargifyNET.Json.JsonNumber.IntValue">
            <summary>
            The Integer value of this JsonNumber object (if applicable)
            </summary>
        </member>
        <member name="P:ChargifyNET.Json.JsonNumber.DoubleValue">
            <summary>
            The double value of this JsonNumber object (if applicable)
            </summary>
        </member>
        <member name="T:ChargifyNET.Configuration.ChargifyAccountElement">
            <summary>
            The object that holds information about a Chargify account, including name, site, apikey and password
            </summary>
        </member>
        <member name="P:ChargifyNET.Configuration.ChargifyAccountElement.Name">
            <summary>
            The "Name" of the site, used when setting the Default
            </summary>
        </member>
        <member name="P:ChargifyNET.Configuration.ChargifyAccountElement.Site">
            <summary>
            The URL of the site on Chargify to connect to
            </summary>
        </member>
        <member name="P:ChargifyNET.Configuration.ChargifyAccountElement.ApiKey">
            <summary>
            The API key (provided in the Chargify account) needed for security reasons
            </summary>
        </member>
        <member name="P:ChargifyNET.Configuration.ChargifyAccountElement.ApiPassword">
            <summary>
            The API password (provided in the Chargify account) needed for security reasons
            </summary>
        </member>
        <member name="P:ChargifyNET.Configuration.ChargifyAccountElement.SharedKey">
            <summary>
            The shared key (used for generating hosted page url's)
            </summary>
        </member>
        <member name="T:ChargifyNET.ChargifyConnect">
            <summary>
            Class containing methods for interfacing with the Chargify API via XML and JSON
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="URL">The Chargify URL</param>
            <param name="apiKey">Your Chargify api key</param>
            <param name="Password">Your Chargify api password</param>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="URL">The Chargify URL</param>
            <param name="apiKey">Your Chargify api key</param>
            <param name="password">Your Chargify api password</param>
            <param name="sharedKey">Your Chargify hosted page shared key</param>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadCustomer(System.Int32)">
            <summary>
            Load the requested customer from chargify
            </summary>
            <param name="ChargifyID">The chargify ID of the customer</param>
            <returns>The customer with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadCustomer(System.String)">
            <summary>
            Load the requested customer from chargify
            </summary>
            <param name="SystemID">The system ID of the customer</param>
            <returns>The customer with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCustomer(ChargifyNET.ICustomer)">
            <summary>
            Create a new chargify customer
            </summary>
            <param name="Customer">
            A customer object containing customer attributes.  The customer cannot be an existing saved chargify customer
            </param>
            <returns>The created chargify customer</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCustomer(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a new chargify customer
            </summary>
            <param name="FirstName">The first name of the customer</param>
            <param name="LastName">The last name of the customer</param>
            <param name="EmailAddress">The email address of the customer</param>
            <param name="Organization">The organization of the customer</param>
            <param name="SystemID">The system ID fro the customer</param>
            <returns>The created chargify customer</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateCustomer(ChargifyNET.ICustomer)">
            <summary>
            Update the specified chargify customer
            </summary>
            <param name="Customer">The customer to update</param>
            <returns>The updated customer</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetCustomerList(System.Int32)">
            <summary>
            Get a list of customers (will return 50 for each page)
            </summary>
            <param name="PageNumber">The page number to load</param>
            <returns>A list of customers for the specified page</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetCustomerList(System.Int32,System.Boolean)">
            <summary>
            Get a list of customers (will return 50 for each page)
            </summary>
            <param name="PageNumber">The page number to load</param>
            <param name="keyByChargifyID">If true, the dictionary will be keyed by Chargify ID and not the reference value.</param>
            <returns>A list of customers for the specified page</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetCustomerList">
            <summary>
            Get a list of all customers.  Be careful calling this method because a large number of
            customers will result in multiple calls to Chargify
            </summary>
            <returns>A list of customers</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetCustomerList(System.Boolean)">
            <summary>
            Get a list of all customers.  Be careful calling this method because a large number of
            customers will result in multiple calls to Chargify
            </summary>
            <param name="keyByChargifyID">If true, the key will be the ChargifyID, otherwise it will be the reference value</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.DeleteCustomer(System.Int32)">
            <summary>
            Delete the specified customer
            </summary>
            <param name="ChargifyID">The integer identifier of the customer</param>
            <returns>True if the customer was deleted, false otherwise.</returns>
            <remarks>This method does not currently work, but it will once they open up the API. This will always return false, as Chargify will send a Http Forbidden everytime.</remarks>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.DeleteCustomer(System.String)">
            <summary>
            Delete the specified customer
            </summary>
            <param name="SystemID">The system identifier of the customer.</param>
            <returns>True if the customer was deleted, false otherwise.</returns>
            <remarks>This method does not currently work, but it will once they open up the API. This will always return false, as Chargify will send a Http Forbidden everytime.</remarks>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateProduct(System.Int32,ChargifyNET.IProduct)">
            <summary>
            Method to create a new product and add it to the site
            </summary>
            <param name="ProductFamilyID">The product family ID, required for adding products</param>
            <param name="NewProduct">The new product details</param>
            <returns>The completed product information</returns>
            <remarks>This is largely undocumented currently, especially the fact that you need the product family ID</remarks>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadProduct(System.String)">
            <summary>
            Load the requested product from chargify by its handle
            </summary>
            <param name="Handle">The Chargify ID or handle of the product</param>
            <returns>The product with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadProduct(System.String,System.Boolean)">
            <summary>
            Load the requested product from chargify
            </summary>
            <param name="ProductID">The Chargify ID or handle of the product</param>
            <param name="IsHandle">If true, then the ProductID represents the handle, if false the ProductID represents the Chargify ID</param>
            <returns>The product with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetProductList">
            <summary>
            Get a list of products
            </summary>
            <returns>A list of products (keyed by product handle)</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetPrettySubscriptionUpdateURL(System.String,System.String,System.Int32)">
            <summary>
            Method to get the secure URL (with pretty id) for updating the payment details for a subscription.
            </summary>
            <param name="FirstName">The first name of the customer to add to the pretty url</param>
            <param name="LastName">The last name of the customer to add to the pretty url</param>
            <param name="SubscriptionID">The ID of the subscription to update</param>
            <returns>The secure url of the update page</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetSubscriptionUpdateURL(System.Int32)">
            <summary>
            Method to get the secure URL for updating the payment details for a subscription.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to update</param>
            <returns>The secure url of the update page</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.ReactivateSubscription(System.Int32)">
            <summary>
            Chargify offers the ability to reactivate a previously canceled subscription. For details
            on how reactivation works, and how to reactivate subscriptions through the Admin interface, see
            http://support.chargify.com/faqs/features/reactivation
            </summary>
            <param name="SubscriptionID">The ID of the subscription to reactivate</param>
            <returns>The newly reactivated subscription, or nothing.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.ReactivateSubscription(System.Int32,System.Boolean)">
            <summary>
            Chargify offers the ability to reactivate a previously canceled subscription. For details
            on how reactivation works, and how to reactivate subscriptions through the Admin interface, see
            http://support.chargify.com/faqs/features/reactivation
            </summary>
            <param name="SubscriptionID">The ID of the subscription to reactivate</param>
            <param name="includeTrial">If true, the reactivated subscription will include a trial if one is available.</param>
            <returns>The newly reactivated subscription, or nothing.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.DeleteSubscription(System.Int32,System.String)">
            <summary>
            Delete a subscription
            </summary>
            <param name="SubscriptionID">The ID of the sucscription</param>
            <param name="CancellationMessage">The message to associate with the subscription</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadSubscription(System.Int32)">
            <summary>
            Load the requested customer from chargify
            </summary>
            <param name="SubscriptionID">The ID of the subscription</param>
            <returns>The subscription with the specified ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetSubscriptionList(System.Collections.Generic.List{ChargifyNET.SubscriptionState})">
            <summary>
            Method that returns a list of subscriptions.
            </summary>
            <param name="states">A list of the states of subscriptions to return</param>
            <returns>Null if there are no results, object otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetSubscriptionList">
            <summary>
            Method that returns a list of subscriptions.
            </summary>
            <returns>Null if there are no results, object otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetSubscriptionList(System.Int32,System.Int32)">
            <summary>
            Method that returns a list of subscriptions.
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <returns>Null if there are no results, object otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetSubscriptionListForCustomer(System.Int32)">
            <summary>
            Get a list of all subscriptions for a customer.
            </summary>
            <param name="ChargifyID">The ChargifyID of the customer</param>
            <returns>A list of subscriptions</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.Int32)">
            <summary>
            Create a new subscription without passing credit card information.
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="ChargifyID">The Chargify ID of the customer</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.Int32,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="ChargifyID">The Chargify ID of the customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.Int32,System.String)">
            <summary>
            Create a subscription using a coupon for discounted rate, without using credit card information.
            </summary>
            <param name="ProductHandle">The product to subscribe to</param>
            <param name="ChargifyID">The ID of the Customer to add the subscription for</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>If sucessful, the subscription object. Otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.Int32,ChargifyNET.ICreditCardAttributes,System.String)">
            <summary>
            Create a subscription using a coupon for discounted rate
            </summary>
            <param name="ProductHandle">The product to subscribe to</param>
            <param name="ChargifyID">The ID of the Customer to add the subscription for</param>
            <param name="CreditCardAttributes">The credit card attributes to use for this transaction</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String)">
            <summary>
            Create a new subscription without requiring credit card information
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.String,System.String)">
            <summary>
            Create a new subscription without passing credit card info
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.String,ChargifyNET.ICreditCardAttributes,System.String)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time without submitting CreditCard attributes
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,System.DateTime,ChargifyNET.IPaymentProfileAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time and import the card data from a specific vault storage
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="NextBillingAt">DateTime for this customer to be assessed at</param>
            <param name="ExistingProfile">Data concerning the existing profile in vault storage</param>
            <returns>The xml describing the new subscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.Int32,System.Int32)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="ComponentID">The component to allocate when creating the subscription</param>
            <param name="AllocatedQuantity">The quantity to allocate of the component when creating the subscription</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,System.String)">
            <summary>
            Create a new subscription and a new customer at the same time using no credit card information
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,System.String,System.DateTime,ChargifyNET.IPaymentProfileAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time using no credit card information
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CouponCode">The discount coupon code</param>
            <param name="NextBillingAt">DateTime for this customer to be assessed at</param>
            <param name="ExistingProfile">Data concerning the existing profile in vault storage</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.String)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.String,System.Int32,System.Int32)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="CouponCode">The discount coupon code</param>
            <param name="ComponentID">The component to allocate when creating the subscription</param>
            <param name="AllocatedQuantity">The quantity to allocate of the component when creating the subscription</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.Int32,System.String)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="ChargifyID">The Chargify ID of the customer</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="ChargifyID">The Chargify ID of the customer</param>
            <param name="FullNumber">The full number of the credit card</param>
            <param name="ExpirationMonth">The expritation month of the credit card</param>
            <param name="ExpirationYear">The expiration year of the credit card</param>
            <param name="CVV">The CVV for the credit card</param>
            <param name="BillingAddress">The billing address</param>
            <param name="BillingCity">The billing city</param>
            <param name="BillingState">The billing state or province</param>
            <param name="BillingZip">The billing zip code or postal code</param>
            <param name="BillingCountry">The billing country</param>
            <param name="CouponCode">The discount coupon code</param>
            <param name="FirstName">The first name, as it appears on the credit card</param>
            <param name="LastName">The last name, as it appears on the credit card</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="ChargifyID">The Chargify ID of the customer</param>
            <param name="FullNumber">The full number of the credit card</param>
            <param name="ExpirationMonth">The expritation month of the credit card</param>
            <param name="ExpirationYear">The expiration year of the credit card</param>
            <param name="CVV">The CVV for the credit card</param>
            <param name="BillingAddress">The billing address</param>
            <param name="BillingCity">The billing city</param>
            <param name="BillingState">The billing state or province</param>
            <param name="BillingZip">The billing zip code or postal code</param>
            <param name="BillingCountry">The billing country</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String,System.String)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <param name="CouponCode">The discount coupon code</param> 
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <param name="FullNumber">The full number of the credit card</param>
            <param name="ExpirationMonth">The expritation month of the credit card</param>
            <param name="ExpirationYear">The expiration year of the credit card</param>
            <param name="CVV">The CVV for the credit card</param>
            <param name="BillingAddress">The billing address</param>
            <param name="BillingCity">The billing city</param>
            <param name="BillingState">The billing state or province</param>
            <param name="BillingZip">The billing zip code or postal code</param>
            <param name="BillingCountry">The billing country</param>
            <param name="CouponCode">The discount coupon code</param> 
            <param name="FirstName">The first name, as listed on the credit card</param>
            <param name="LastName">The last name, as listed on the credit card</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <param name="FullNumber">The full number of the credit card</param>
            <param name="ExpirationMonth">The expritation month of the credit card</param>
            <param name="ExpirationYear">The expiration year of the credit card</param>
            <param name="CVV">The CVV for the credit card</param>
            <param name="BillingAddress">The billing address</param>
            <param name="BillingCity">The billing city</param>
            <param name="BillingState">The billing state or province</param>
            <param name="BillingZip">The billing zip code or postal code</param>
            <param name="BillingCountry">The billing country</param>
            <param name="CouponCode">The discount coupon code</param> 
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,ChargifyNET.IPaymentProfileAttributes)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="NewSystemID">The reference field value of the customer</param>
            <param name="FirstName">The first name of the customer</param>
            <param name="LastName">The last name of the customer</param>
            <param name="EmailAddress">The email address of the customer</param>
            <param name="Organization">The customer's organization</param>
            <param name="CouponCode">The discount coupon code</param> 
            <param name="NextBillingAt">The next date that the billing should be processed</param>
            <param name="PaymentProfile">The paymentProfile object to use when creating the subscription (existing data)</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
             <summary>
             Create a new subscription and a new customer at the same time
             </summary>
             <param name="ProductHandle">The handle to the product</param>
            <param name="NewSystemID">The system ID for the new customer</param>
            <param name="FirstName">The first name of the new customer</param>
            <param name="LastName">The last nameof the new customer</param>
            <param name="EmailAddress">The email address for the new customer</param>
            <param name="Organization">The organization of the new customer</param>
             <param name="FullNumber">The full number of the credit card</param>
             <param name="ExpirationMonth">The expritation month of the credit card</param>
             <param name="ExpirationYear">The expiration year of the credit card</param>
             <param name="CVV">The CVV for the credit card</param>
             <param name="BillingAddress">The billing address</param>
             <param name="BillingCity">The billing city</param>
             <param name="BillingState">The billing state or province</param>
             <param name="BillingZip">The billing zip code or postal code</param>
             <param name="BillingCountry">The billing country</param>
             <param name="CouponCode">The discount coupon code</param>
             <param name="ComponentID">The component to add while creating the subscription</param>
             <param name="AllocatedQuantity">The quantity of the component to allocate when creating the component usage for the new subscription</param>
             <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateSubscriptionCreditCard(ChargifyNET.ISubscription,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="Subscription">The subscription to update credit card info for</param>
            <param name="CreditCardAttributes">The attributes for the updated credit card</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateSubscriptionCreditCard(System.Int32,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="CreditCardAttributes">The attributes for the update credit card</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateSubscriptionCreditCard(ChargifyNET.ISubscription,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="Subscription">The subscription to update credit card info for</param>
            <param name="FullNumber">The full number of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationMonth">The expiration month of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
            <param name="CVV">The CVV for the credit card (optional - set to null if not required)</param>
            <param name="BillingAddress">The billing address (optional - set to null if not required)</param>
            <param name="BillingCity">The billing city (optional - set to null if not required)</param>
            <param name="BillingState">The billing state or province (optional - set to null if not required)</param>
            <param name="BillingZip">The billing zip code or postal code (optional - set to null if not required)</param>
            <param name="BillingCountry">The billing country (optional - set to null if not required)</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateSubscriptionCreditCard(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="FullNumber">The full number of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationMonth">The expiration month of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
            <param name="CVV">The CVV for the credit card (optional - set to null if not required)</param>
            <param name="BillingAddress">The billing address (optional - set to null if not required)</param>
            <param name="BillingCity">The billing city (optional - set to null if not required)</param>
            <param name="BillingState">The billing state or province (optional - set to null if not required)</param>
            <param name="BillingZip">The billing zip code or postal code (optional - set to null if not required)</param>
            <param name="BillingCountry">The billing country (optional - set to null if not required)</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateSubscriptionCreditCard(System.Int32,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="FirstName">The billing first name (first name on the card)</param>
            <param name="LastName">The billing last name (last name on the card)</param>
            <param name="FullNumber">The full number of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationMonth">The expiration month of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
            <param name="CVV">The CVV for the credit card (optional - set to null if not required)</param>
            <param name="BillingAddress">The billing address (optional - set to null if not required)</param>
            <param name="BillingCity">The billing city (optional - set to null if not required)</param>
            <param name="BillingState">The billing state or province (optional - set to null if not required)</param>
            <param name="BillingZip">The billing zip code or postal code (optional - set to null if not required)</param>
            <param name="BillingCountry">The billing country (optional - set to null if not required)</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateTheSubscriptionCreditCard(System.Int32,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Method to update the payment profile
            </summary>
            <param name="SubscriptionID">The subscription to update</param>
            <param name="FirstName">The billing first name</param>
            <param name="LastName">The billing last name</param>
            <param name="FullNumber">The credit card number</param>
            <param name="ExpirationMonth">The expiration month</param>
            <param name="ExpirationYear">The expiration year</param>
            <param name="CVV">The CVV as written on the back of the card</param>
            <param name="BillingAddress">The billing address</param>
            <param name="BillingCity">The billing city</param>
            <param name="BillingState">The billing state</param>
            <param name="BillingZip">The billing zip/postal code</param>
            <param name="BillingCountry">The billing country</param>
            <returns>The updated subscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.MigrateSubscriptionProduct(ChargifyNET.ISubscription,ChargifyNET.IProduct,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="Subscription">The subscription to migrate</param>
            <param name="Product">The product to migrate the subscription to</param>
            <param name="IncludeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="IncludeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.MigrateSubscriptionProduct(System.Int32,ChargifyNET.IProduct,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="SubscriptionID">The subscription to migrate</param>
            <param name="Product">The product to migrate to</param>
            <param name="IncludeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="IncludeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns>The completed subscription if migrated successfully, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.MigrateSubscriptionProduct(ChargifyNET.ISubscription,System.String,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="Subscription">The subscription to migrate</param>
            <param name="ProductHandle">The product handle of the product to migrate to</param>
            <param name="IncludeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="IncludeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns>The completed subscription if migrated successfully, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.MigrateSubscriptionProduct(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="SubscriptionID">The subscription to migrate</param>
            <param name="ProductHandle">The product handle of the product to migrate to</param>
            <param name="IncludeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="IncludeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns>The completed subscription if migrated successfully, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.EditSubscriptionProduct(ChargifyNET.ISubscription,ChargifyNET.IProduct)">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="Subscription">The suscription to update</param>
            <param name="Product">The new product</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.EditSubscriptionProduct(System.Int32,ChargifyNET.IProduct)">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="Product">The new product</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.EditSubscriptionProduct(ChargifyNET.ISubscription,System.String)">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="Subscription">The suscription to update</param>
            <param name="ProductHandle">The handle to the new product</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.EditSubscriptionProduct(System.Int32,System.String)">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="ProductHandle">The handle to the new product</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateSubscription(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
             <summary>
             Update a subscription changing customer, product and credit card information at the same time
             </summary>
             <param name="SubscriptionID">The ID of the subscription to update</param>
             <param name="ProductHandle">The handle to the product (optional - set to null if not required)</param>
            <param name="SystemID">The system ID for the customer (optional - set to Guid.Empty if not required)</param>
            <param name="FirstName">The first name of the new customer (optional - set to null if not required)</param>
            <param name="LastName">The last name of the new customer (optional - set to null if not required)</param>
            <param name="EmailAddress">The email address for the new customer (optional - set to null if not required)</param>
            <param name="Organization">The organization of the new customer (optional - set to null if not required)</param>
             <param name="FullNumber">The full number of the credit card (optional - set to null if not required)</param>
             <param name="ExpirationMonth">The expritation month of the credit card (optional - set to null if not required)</param>
             <param name="ExpirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
             <param name="CVV">The CVV for the credit card (optional - set to null if not required)</param>
             <param name="BillingAddress">The billing address (optional - set to null if not required)</param>
             <param name="BillingCity">The billing city (optional - set to null if not required)</param>
             <param name="BillingState">The billing state or province (optional - set to null if not required)</param>
             <param name="BillingZip">The billing zip code or postal code (optional - set to null if not required)</param>
             <param name="BillingCountry">The billing country (optional - set to null if not required)</param>
             <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateBillingDateForSubscription(System.Int32,System.DateTime)">
            <summary>
            Method to allow users to change the next_assessment_at date
            </summary>
            <param name="SubscriptionID">The subscription to modify</param>
            <param name="NextBillingAt">The date to next bill the customer</param>
            <returns>Subscription if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateDelayedCancelForSubscription(System.Int32,System.Boolean,System.String)">
            <summary>
            Method to allow users to change the cancel_at_end_of_period flag
            </summary>
            <param name="SubscriptionID">The subscription to modify</param>
            <param name="CancelAtEndOfPeriod">True if the subscription should cancel at the end of the current period</param>
            <param name="CancellationMessage">The reason for cancelling the subscription</param>
            <returns>Subscription if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.ResetSubscriptionBalance(System.Int32)">
            <summary>
            Method for reseting a subscription balance to zero (removes outstanding balance). 
            Useful when reactivating subscriptions, and making sure not to charge the user
            their existing balance when then cancelled.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadCoupon(System.Int32,System.Int32)">
            <summary>
            Method for retrieving information about a coupon using the ID of that coupon.
            </summary>
            <param name="ProductFamilyID">The ID of the product family that the coupon belongs to</param>
            <param name="CouponID">The ID of the coupon</param>
            <returns>The object if found, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.FindCoupon(System.Int32,System.String)">
            <summary>
            Retrieve the coupon corresponding to the coupon code, useful for coupon validation.
            </summary>
            <param name="ProductFamilyID">The ID of the product family the coupon belongs to</param>
            <param name="CouponCode">The code used to represent the coupon</param>
            <returns>The object if found, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.AddCoupon(System.Int32,System.String)">
            <summary>
            Method to add a coupon to a subscription using the API
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify</param>
            <param name="CouponCode">The code of the coupon to apply to the subscription</param>
            <returns>The subscription details if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCharge(System.Int32,ChargifyNET.ICharge)">
            <summary>
            Create a new one-time charge
            </summary>
            <param name="SubscriptionID">The subscription that will be charged</param>
            <param name="Charge">The charge parameters</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCharge(System.Int32,System.Decimal,System.String)">
            <summary>
            Create a new one-time charge
            </summary>
            <param name="SubscriptionID">The subscription that will be charged</param>
            <param name="amount">The amount to charge the customer</param>
            <param name="memo"></param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCredit(System.Int32,ChargifyNET.ICredit)">
            <summary>
            Create a new one-time credit
            </summary>
            <param name="SubscriptionID">The subscription that will be credited</param>
            <param name="Credit">The credit parameters</param>
            <returns>The object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCredit(System.Int32,System.Decimal,System.String)">
            <summary>
            Create a new one-time credit
            </summary>
            <param name="SubscriptionID">The subscription that will be credited</param>
            <param name="amount">The amount to credit the customer</param>
            <param name="memo">A note regarding the reason for the credit</param>
            <returns>The object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateComponentAllocationForSubscription(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method to update the allocated amount of a component for a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify the allocation for</param>
            <param name="ComponentID">The ID of the component</param>
            <param name="NewAllocatedQuantity">The amount of component to allocate to the subscription</param>
            <returns>The ComponentAttributes object with UnitBalance filled in, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetComponentInfoForSubscription(System.Int32,System.Int32)">
            <summary>
            Method to retrieve the current information (including allocation) of a component against a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription in question</param>
            <param name="ComponentID">The ID of the component</param>
            <returns>The ComponentAttributes object, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetComponentsForSubscription(System.Int32)">
            <summary>
            Returns all components "attached" to that subscription.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to query about</param>
            <returns>A dictionary of components, if applicable.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetComponentsForProductFamily(System.Int32,System.Boolean)">
            <summary>
            Method for getting a list of components for a specific product family
            </summary>
            <param name="ChargifyID">The product family ID</param>
            <param name="includeArchived">Filter flag for archived components</param>
            <returns>A dictionary of components if there are results, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetComponentsForProductFamily(System.Int32)">
            <summary>
            Method for getting a list of components for a specific product family
            </summary>
            <param name="ChargifyID">The product family ID</param>
            <returns>A dictionary of components if there are results, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetComponentList(System.Int32,System.Int32)">
            <summary>
            Method for getting a list of component usages for a specific subscription
            </summary>
            <param name="SubscriptionID">The subscription ID to examine</param>
            <param name="ComponentID">The ID of the component to examine</param>
            <returns>A dictionary of usages if there are results, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.AddUsage(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Method for adding a metered component usage to the subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to modify</param>
            <param name="ComponentID">The ID of the (metered or quantity) component to add a usage of</param>
            <param name="Quantity">The number of usages to add</param>
            <param name="Memo">The memo for the usage</param>
            <returns>The usage added if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.SetComponent(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Method for turning on or off a component
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify</param>
            <param name="ComponentID">The ID of the component (on/off only) to modify</param>
            <param name="SetEnabled">True if wanting to turn the component "on", false otherwise.</param>
            <returns>IComponentAttributes object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList">
            <summary>
            Method for getting a list of transactions
            </summary>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Collections.Generic.List{ChargifyNET.TransactionType})">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="kinds">A list of the types of transactions to return.</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="since_date">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="until_date">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Int32,System.Int32)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType})">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="since_date">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="until_date">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType})">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="since_date">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="until_date">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType})">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="since_date">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="until_date">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadTransaction(System.Int32)">
            <summary>
            Load the requested transaction from Chargify
            </summary>
            <param name="ID">The ID of the transaction</param>
            <returns>The transaction with the specified ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateRefund(System.Int32,System.Int32,System.Decimal,System.String)">
            <summary>
            Create a refund
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify</param>
            <param name="PaymentID">The ID of the payment that the credit will be applied to</param>
            <param name="Amount">The amount (in dollars and cents) like 10.00 is $10.00</param>
            <param name="Memo">A helpful explanation for the refund.</param>
            <returns>The IRefund object indicating successful, or unsuccessful.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateRefund(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Create a refund
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify</param>
            <param name="PaymentID">The ID of the payment that the credit will be applied to</param>
            <param name="AmountInCents">The amount (in cents only) like 100 is $1.00</param>
            <param name="Memo">A helpful explanation for the refund.</param>
            <returns>The IRefund object indicating successful, or unsuccessful.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadStatement(System.Int32)">
            <summary>
            Method for getting a specific statement
            </summary>
            <param name="StatementID">The ID of the statement to retrieve</param>
            <returns>The statement if found, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetStatementList(System.Int32)">
            <summary>
            Method for getting a list of statments for a specific subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to retrieve the statements for</param>
            <returns>The list of statements, an empty dictionary otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetStatementList(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method for getting a list of statments for a specific subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to retrieve the statements for</param>
            <param name="page">The page number to return</param>
            <param name="per_page">The number of results to return per page</param>
            <returns>The list of statements, an empty dictionary otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetSiteStatistics">
            <summary>
            Method for getting the statstics of a Chargify site
            </summary>
            <returns>The site statistics if applicable.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateAdjustment(System.Int32,System.Decimal,System.String)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to adjust</param>
            <param name="amount">The amount (in dollars and cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateAdjustment(System.Int32,System.Decimal,System.String,ChargifyNET.AdjustmentMethod)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to adjust</param>
            <param name="amount">The amount (in dollars and cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <param name="method">A string that toggles how the adjustment should be applied</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateAdjustment(System.Int32,System.Int32,System.String)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to adjust</param>
            <param name="amount_in_cents">The amount (in cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateAdjustment(System.Int32,System.Int32,System.String,ChargifyNET.AdjustmentMethod)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to adjust</param>
            <param name="amount_in_cents">The amount (in cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <param name="method">A string that toggles how the adjustment should be applied</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateAdjustment(System.Int32,System.Decimal,System.Int32,System.String,ChargifyNET.AdjustmentMethod)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to adjust</param>
            <param name="amount">The amount (in dollars and cents)</param>
            <param name="amount_in_cents">The amount (in cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <param name="method">A string that toggles how the adjustment should be applied</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.DoRequest(System.String)">
            <summary>
            Make a GET request to Chargify
            </summary>
            <param name="MethodString">The method string for the request.  This is appended to the base URL</param>
            <returns>The xml response to the request</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.DoRequest(System.String,ChargifyNET.ChargifyConnect.HttpRequestMethod,System.String)">
            <summary>
            Make a request to Chargify
            </summary>
            <param name="methodString">The method string for the request.  This is appended to the base URL</param>
            <param name="requestMethod">The request method (GET or POST)</param>
            <param name="postData">The data included as part of a POST, PUT or DELETE request</param>
            <returns>The xml response to the request</returns>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.apiKey">
            <summary>
            Get or set the API key
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.Password">
            <summary>
            Get or set the password
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.URL">
            <summary>
            Get or set the URL for chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.SharedKey">
            <summary>
            SharedKey used for url generation
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.UseJSON">
            <summary>
            Should Chargify.NET use JSON for output? XML by default.
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.HasConnected">
            <summary>
            Method for determining if the properties have been set to allow this instance to connect correctly.
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.LastResponse">
            <summary>
            Get a reference to the last Http Response from the chargify server. This is set after every call to
            a Chargify Connect method
            </summary>
        </member>
    </members>
</doc>
